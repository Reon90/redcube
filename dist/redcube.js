(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("redcube", [], factory);
	else if(typeof exports === 'object')
		exports["redcube"] = factory();
	else
		root["redcube"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/redcube.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/events.ts":
/*!***********************!*\
  !*** ./src/events.ts ***!
  \***********************/
/*! exports provided: Events */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Events\", function() { return Events; });\nclass Events {\r\n    constructor(redraw) {\r\n        this.redraw = redraw;\r\n        this.zoomValue = 0;\r\n        document.addEventListener('wheel', this);\r\n        document.addEventListener('mousedown', this);\r\n        document.addEventListener('mousemove', this);\r\n        document.addEventListener('mouseup', this);\r\n        document.addEventListener('keyup', this);\r\n        document.addEventListener('keydown', this);\r\n        addEventListener('resize', this);\r\n    }\r\n    handleEvent(e) {\r\n        switch (e.type) {\r\n            case 'wheel':\r\n                this.zoom(e);\r\n                break;\r\n            case 'mousedown':\r\n                this.onStart(e);\r\n                break;\r\n            case 'mousemove':\r\n                this.onMove(e);\r\n                break;\r\n            case 'mouseup':\r\n                this.onEnd();\r\n                break;\r\n            case 'keyup':\r\n                this.onKeyUp();\r\n                break;\r\n            case 'keydown':\r\n                this.onKeyDown(e);\r\n                break;\r\n            case 'resize':\r\n                this.onResize();\r\n                break;\r\n        }\r\n    }\r\n    onResize() {\r\n        this.redraw('resize');\r\n    }\r\n    onKeyDown(e) {\r\n        if (e.shiftKey || e.ctrlKey) {\r\n            this.isPan = true;\r\n        }\r\n    }\r\n    onKeyUp() {\r\n        this.isPan = false;\r\n    }\r\n    onStart(e) {\r\n        this.x = e.clientX;\r\n        this.y = e.clientY;\r\n        this.isDrag = true;\r\n    }\r\n    onMove(e) {\r\n        if (this.isDrag) {\r\n            if (this.isPan) {\r\n                this.redraw('pan', [this.x, this.y], [e.clientX, e.clientY]);\r\n            }\r\n            else {\r\n                this.redraw('rotate', [this.x, this.y], [e.clientX, e.clientY]);\r\n            }\r\n            this.x = e.clientX;\r\n            this.y = e.clientY;\r\n        }\r\n    }\r\n    onEnd() {\r\n        this.isDrag = false;\r\n    }\r\n    zoom(e) {\r\n        this.zoomValue = Math.min(this.zoomValue + e.deltaY, 1250);\r\n        this.redraw('zoom', Math.pow(1.001, this.zoomValue));\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXZlbnRzLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVkY3ViZS8uL3NyYy9ldmVudHMudHM/YTYxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBFdmVudHMge1xyXG4gICAgY29uc3RydWN0b3IocmVkcmF3KSB7XHJcbiAgICAgICAgdGhpcy5yZWRyYXcgPSByZWRyYXc7XHJcbiAgICAgICAgdGhpcy56b29tVmFsdWUgPSAwO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMpO1xyXG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMpO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlRXZlbnQoZSkge1xyXG4gICAgICAgIHN3aXRjaCAoZS50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3doZWVsJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuem9vbShlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdtb3VzZWRvd24nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5vblN0YXJ0KGUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ21vdXNlbW92ZSc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uTW92ZShlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdtb3VzZXVwJzpcclxuICAgICAgICAgICAgICAgIHRoaXMub25FbmQoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdrZXl1cCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uS2V5VXAoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdrZXlkb3duJzpcclxuICAgICAgICAgICAgICAgIHRoaXMub25LZXlEb3duKGUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3Jlc2l6ZSc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uUmVzaXplKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvblJlc2l6ZSgpIHtcclxuICAgICAgICB0aGlzLnJlZHJhdygncmVzaXplJyk7XHJcbiAgICB9XHJcbiAgICBvbktleURvd24oZSkge1xyXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5IHx8IGUuY3RybEtleSkge1xyXG4gICAgICAgICAgICB0aGlzLmlzUGFuID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbktleVVwKCkge1xyXG4gICAgICAgIHRoaXMuaXNQYW4gPSBmYWxzZTtcclxuICAgIH1cclxuICAgIG9uU3RhcnQoZSkge1xyXG4gICAgICAgIHRoaXMueCA9IGUuY2xpZW50WDtcclxuICAgICAgICB0aGlzLnkgPSBlLmNsaWVudFk7XHJcbiAgICAgICAgdGhpcy5pc0RyYWcgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgb25Nb3ZlKGUpIHtcclxuICAgICAgICBpZiAodGhpcy5pc0RyYWcpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNQYW4pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVkcmF3KCdwYW4nLCBbdGhpcy54LCB0aGlzLnldLCBbZS5jbGllbnRYLCBlLmNsaWVudFldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVkcmF3KCdyb3RhdGUnLCBbdGhpcy54LCB0aGlzLnldLCBbZS5jbGllbnRYLCBlLmNsaWVudFldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IGUuY2xpZW50WTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkVuZCgpIHtcclxuICAgICAgICB0aGlzLmlzRHJhZyA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgem9vbShlKSB7XHJcbiAgICAgICAgdGhpcy56b29tVmFsdWUgPSBNYXRoLm1pbih0aGlzLnpvb21WYWx1ZSArIGUuZGVsdGFZLCAxMjUwKTtcclxuICAgICAgICB0aGlzLnJlZHJhdygnem9vbScsIE1hdGgucG93KDEuMDAxLCB0aGlzLnpvb21WYWx1ZSkpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCB7IEV2ZW50cyB9O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/events.ts\n");

/***/ }),

/***/ "./src/fps.ts":
/*!********************!*\
  !*** ./src/fps.ts ***!
  \********************/
/*! exports provided: FPS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FPS\", function() { return FPS; });\nclass FPS {\r\n    constructor() {\r\n        this.counterEl = document.createElement('div');\r\n        this.counterEl.setAttribute('style', 'position: absolute; top: 0; right: 0; color: #fff; font-size: 30px; background: #000;');\r\n        document.body.appendChild(this.counterEl);\r\n        this.fps = 0;\r\n        this.elapsedTime = 0;\r\n        this.lastTime = 0;\r\n    }\r\n    tick(time) {\r\n        this.fps++;\r\n        this.elapsedTime += (time - this.lastTime);\r\n        this.lastTime = time;\r\n        if (this.elapsedTime >= 1000) {\r\n            this.counterEl.innerHTML = String(this.fps);\r\n            this.fps = 0;\r\n            this.elapsedTime -= 1000;\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZnBzLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVkY3ViZS8uL3NyYy9mcHMudHM/NTc0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRlBTIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuY291bnRlckVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgdGhpcy5jb3VudGVyRWwuc2V0QXR0cmlidXRlKCdzdHlsZScsICdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgcmlnaHQ6IDA7IGNvbG9yOiAjZmZmOyBmb250LXNpemU6IDMwcHg7IGJhY2tncm91bmQ6ICMwMDA7Jyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmNvdW50ZXJFbCk7XHJcbiAgICAgICAgdGhpcy5mcHMgPSAwO1xyXG4gICAgICAgIHRoaXMuZWxhcHNlZFRpbWUgPSAwO1xyXG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSAwO1xyXG4gICAgfVxyXG4gICAgdGljayh0aW1lKSB7XHJcbiAgICAgICAgdGhpcy5mcHMrKztcclxuICAgICAgICB0aGlzLmVsYXBzZWRUaW1lICs9ICh0aW1lIC0gdGhpcy5sYXN0VGltZSk7XHJcbiAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XHJcbiAgICAgICAgaWYgKHRoaXMuZWxhcHNlZFRpbWUgPj0gMTAwMCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZXJFbC5pbm5lckhUTUwgPSBTdHJpbmcodGhpcy5mcHMpO1xyXG4gICAgICAgICAgICB0aGlzLmZwcyA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuZWxhcHNlZFRpbWUgLT0gMTAwMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/fps.ts\n");

/***/ }),

/***/ "./src/matrix.ts":
/*!***********************!*\
  !*** ./src/matrix.ts ***!
  \***********************/
/*! exports provided: Matrix2, Matrix3, Matrix4, Vector2, Vector3, Vector4, Frustum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matrix2\", function() { return Matrix2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matrix3\", function() { return Matrix3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matrix4\", function() { return Matrix4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector2\", function() { return Vector2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return Vector3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector4\", function() { return Vector4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Frustum\", function() { return Frustum; });\n/**\r\n * This is a class treating 4x4 matrix.\r\n * This class contains the function that is equivalent to OpenGL matrix stack.\r\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\r\n * The matrix is replaced by the calculated result.\r\n */\r\nclass Matrix2 {\r\n    constructor(opt_src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        if (opt_src && typeof opt_src === 'object' && opt_src.hasOwnProperty('elements')) {\r\n            s = opt_src.elements;\r\n            d = new Float32Array(4);\r\n            for (i = 0; i < 4; ++i) {\r\n                d[i] = s[i];\r\n            }\r\n            this.elements = d;\r\n        }\r\n        else {\r\n            this.elements = new Float32Array([1, 0, 0, 1]);\r\n        }\r\n    }\r\n    set(src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        s = src;\r\n        d = this.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        for (i = 0; i < 4; ++i) {\r\n            d[i] = s[i];\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Constructor of Matrix3\r\n * If opt_src is specified, new matrix is initialized by opt_src.\r\n * Otherwise, new matrix is initialized by identity matrix.\r\n * @param opt_src source matrix(option)\r\n */\r\nclass Matrix3 {\r\n    constructor(opt_src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        if (opt_src && typeof opt_src === 'object' && opt_src.hasOwnProperty('elements')) {\r\n            s = opt_src.elements;\r\n            d = new Float32Array(9);\r\n            for (i = 0; i < 9; ++i) {\r\n                d[i] = s[i];\r\n            }\r\n            this.elements = d;\r\n        }\r\n        else {\r\n            this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\n        }\r\n    }\r\n    set(src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        s = src;\r\n        d = this.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }\r\n        return this;\r\n    }\r\n    normalFromMat4(a) {\r\n        const e = this.elements;\r\n        a = a.elements;\r\n        let a00 = a[0];\r\n        let a01 = a[1];\r\n        let a02 = a[2];\r\n        let a03 = a[3];\r\n        let a10 = a[4];\r\n        let a11 = a[5];\r\n        let a12 = a[6];\r\n        let a13 = a[7];\r\n        let a20 = a[8];\r\n        let a21 = a[9];\r\n        let a22 = a[10];\r\n        let a23 = a[11];\r\n        let a30 = a[12];\r\n        let a31 = a[13];\r\n        let a32 = a[14];\r\n        let a33 = a[15];\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n        let // Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        e[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        e[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        e[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        e[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        e[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        e[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        e[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        e[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        e[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Constructor of Matrix4\r\n * If opt_src is specified, new matrix is initialized by opt_src.\r\n * Otherwise, new matrix is initialized by identity matrix.\r\n * @param opt_src source matrix(option)\r\n */\r\nclass Matrix4 {\r\n    constructor(opt_src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        if (opt_src && typeof opt_src === 'object' && opt_src.hasOwnProperty('elements')) {\r\n            s = opt_src.elements;\r\n            d = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                d[i] = s[i];\r\n            }\r\n            this.elements = d;\r\n        }\r\n        else {\r\n            this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n        }\r\n    }\r\n    /**\r\n     * Copy matrix.\r\n     * @param src source matrix\r\n     * @return this\r\n     */\r\n    set(src) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        s = src;\r\n        d = this.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        this.concat(matrix);\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param other The multiply matrix\r\n     * @return this\r\n     */\r\n    concat({ elements }) {\r\n        let i;\r\n        let e;\r\n        let a;\r\n        let b;\r\n        let ai0;\r\n        let ai1;\r\n        let ai2;\r\n        let ai3;\r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = elements;\r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        for (i = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculate the inverse matrix of specified matrix, and set to this.\r\n     * @param other The source matrix\r\n     * @return this\r\n     */\r\n    setInverseOf({ elements }) {\r\n        let i;\r\n        let s;\r\n        let d;\r\n        let inv;\r\n        let det;\r\n        s = elements;\r\n        d = this.elements;\r\n        inv = new Float32Array(16);\r\n        inv[0] = s[5] * s[10] * s[15] - s[5] * s[11] * s[14] - s[9] * s[6] * s[15]\r\n            + s[9] * s[7] * s[14] + s[13] * s[6] * s[11] - s[13] * s[7] * s[10];\r\n        inv[4] = -s[4] * s[10] * s[15] + s[4] * s[11] * s[14] + s[8] * s[6] * s[15]\r\n            - s[8] * s[7] * s[14] - s[12] * s[6] * s[11] + s[12] * s[7] * s[10];\r\n        inv[8] = s[4] * s[9] * s[15] - s[4] * s[11] * s[13] - s[8] * s[5] * s[15]\r\n            + s[8] * s[7] * s[13] + s[12] * s[5] * s[11] - s[12] * s[7] * s[9];\r\n        inv[12] = -s[4] * s[9] * s[14] + s[4] * s[10] * s[13] + s[8] * s[5] * s[14]\r\n            - s[8] * s[6] * s[13] - s[12] * s[5] * s[10] + s[12] * s[6] * s[9];\r\n        inv[1] = -s[1] * s[10] * s[15] + s[1] * s[11] * s[14] + s[9] * s[2] * s[15]\r\n            - s[9] * s[3] * s[14] - s[13] * s[2] * s[11] + s[13] * s[3] * s[10];\r\n        inv[5] = s[0] * s[10] * s[15] - s[0] * s[11] * s[14] - s[8] * s[2] * s[15]\r\n            + s[8] * s[3] * s[14] + s[12] * s[2] * s[11] - s[12] * s[3] * s[10];\r\n        inv[9] = -s[0] * s[9] * s[15] + s[0] * s[11] * s[13] + s[8] * s[1] * s[15]\r\n            - s[8] * s[3] * s[13] - s[12] * s[1] * s[11] + s[12] * s[3] * s[9];\r\n        inv[13] = s[0] * s[9] * s[14] - s[0] * s[10] * s[13] - s[8] * s[1] * s[14]\r\n            + s[8] * s[2] * s[13] + s[12] * s[1] * s[10] - s[12] * s[2] * s[9];\r\n        inv[2] = s[1] * s[6] * s[15] - s[1] * s[7] * s[14] - s[5] * s[2] * s[15]\r\n            + s[5] * s[3] * s[14] + s[13] * s[2] * s[7] - s[13] * s[3] * s[6];\r\n        inv[6] = -s[0] * s[6] * s[15] + s[0] * s[7] * s[14] + s[4] * s[2] * s[15]\r\n            - s[4] * s[3] * s[14] - s[12] * s[2] * s[7] + s[12] * s[3] * s[6];\r\n        inv[10] = s[0] * s[5] * s[15] - s[0] * s[7] * s[13] - s[4] * s[1] * s[15]\r\n            + s[4] * s[3] * s[13] + s[12] * s[1] * s[7] - s[12] * s[3] * s[5];\r\n        inv[14] = -s[0] * s[5] * s[14] + s[0] * s[6] * s[13] + s[4] * s[1] * s[14]\r\n            - s[4] * s[2] * s[13] - s[12] * s[1] * s[6] + s[12] * s[2] * s[5];\r\n        inv[3] = -s[1] * s[6] * s[11] + s[1] * s[7] * s[10] + s[5] * s[2] * s[11]\r\n            - s[5] * s[3] * s[10] - s[9] * s[2] * s[7] + s[9] * s[3] * s[6];\r\n        inv[7] = s[0] * s[6] * s[11] - s[0] * s[7] * s[10] - s[4] * s[2] * s[11]\r\n            + s[4] * s[3] * s[10] + s[8] * s[2] * s[7] - s[8] * s[3] * s[6];\r\n        inv[11] = -s[0] * s[5] * s[11] + s[0] * s[7] * s[9] + s[4] * s[1] * s[11]\r\n            - s[4] * s[3] * s[9] - s[8] * s[1] * s[7] + s[8] * s[3] * s[5];\r\n        inv[15] = s[0] * s[5] * s[10] - s[0] * s[6] * s[9] - s[4] * s[1] * s[10]\r\n            + s[4] * s[2] * s[9] + s[8] * s[1] * s[6] - s[8] * s[2] * s[5];\r\n        det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12];\r\n        if (det === 0) {\r\n            return this;\r\n        }\r\n        det = 1 / det;\r\n        for (i = 0; i < 16; i++) {\r\n            d[i] = inv[i] * det;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculate the inverse matrix of this, and set to this.\r\n     * @return this\r\n     */\r\n    invert() {\r\n        return this.setInverseOf(this);\r\n    }\r\n    /**\r\n     * Set the orthographic projection matrix.\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @return this\r\n     */\r\n    setOrtho(r, t, near, far) {\r\n        let e;\r\n        let rw;\r\n        let rh;\r\n        let rd;\r\n        rw = 1 / r;\r\n        rh = 1 / t;\r\n        rd = 2 / (near - far);\r\n        e = this.elements;\r\n        e[0] = rw;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 0;\r\n        e[5] = rh;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = rd;\r\n        e[11] = (far + near) / (near - far);\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the perspective projection matrix by fovy and aspect.\r\n     * @param fovy The angle between the upper and lower sides of the frustum.\r\n     * @param aspect The aspect ratio of the frustum. (width/height)\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    setPerspective(fovy, aspect, near, far) {\r\n        let e;\r\n        let rd;\r\n        let s;\r\n        let ct;\r\n        if (near === far || aspect === 0) {\r\n            throw 'null frustum';\r\n        }\r\n        if (near <= 0) {\r\n            throw 'near <= 0';\r\n        }\r\n        if (far <= 0) {\r\n            throw 'far <= 0';\r\n        }\r\n        fovy = Math.PI * fovy / 180 / 2;\r\n        s = Math.sin(fovy);\r\n        if (s === 0) {\r\n            throw 'null frustum';\r\n        }\r\n        rd = 1 / (far - near);\r\n        ct = Math.cos(fovy) / s;\r\n        e = this.elements;\r\n        e[0] = ct / aspect;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 0;\r\n        e[5] = ct;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiply the perspective projection matrix from the right.\r\n     * @param fovy The angle between the upper and lower sides of the frustum.\r\n     * @param aspect The aspect ratio of the frustum. (width/height)\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    perspective(fovy, aspect, near, far) {\r\n        return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n    }\r\n    /**\r\n     * Multiply the four-dimensional vector.\r\n     * @param pos  The multiply vector\r\n     * @return The result of multiplication(Float32Array)\r\n     */\r\n    multiplyVector4({ elements }) {\r\n        const e = this.elements;\r\n        const p = elements;\r\n        const v = new Vector4();\r\n        const result = v.elements;\r\n        result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12];\r\n        result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13];\r\n        result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\r\n        result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\r\n        return v;\r\n    }\r\n    scale(vec3) {\r\n        const x = vec3.elements[0];\r\n        const y = vec3.elements[1];\r\n        const z = vec3.elements[2];\r\n        const e = this.elements;\r\n        e[0] *= x;\r\n        e[4] *= y;\r\n        e[8] *= z;\r\n        e[1] *= x;\r\n        e[5] *= y;\r\n        e[9] *= z;\r\n        e[2] *= x;\r\n        e[6] *= y;\r\n        e[10] *= z;\r\n        e[3] *= x;\r\n        e[7] *= y;\r\n        e[11] *= z;\r\n        return this;\r\n    }\r\n    setTranslate(vec3) {\r\n        const e = this.elements;\r\n        const x = vec3.elements[0];\r\n        const y = vec3.elements[1];\r\n        const z = vec3.elements[2];\r\n        e[12] = x;\r\n        e[13] = y;\r\n        e[14] = z;\r\n        e[15] = 1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiply the matrix for translation from the right.\r\n     * @param x The X value of a translation.\r\n     * @param y The Y value of a translation.\r\n     * @param z The Z value of a translation.\r\n     * @return this\r\n     */\r\n    translate(x, y, z) {\r\n        const e = this.elements;\r\n        e[12] += e[0] * x + e[4] * y + e[8] * z;\r\n        e[13] += e[1] * x + e[5] * y + e[9] * z;\r\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n        return this;\r\n    }\r\n    getMaxScaleOnAxis() {\r\n        const te = this.elements;\r\n        const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n        const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n        const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n        return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n    }\r\n    makeRotationFromQuaternion(q) {\r\n        const te = this.elements;\r\n        let x = q[0];\r\n        let y = q[1];\r\n        let z = q[2];\r\n        let w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n        te[0] = 1 - (yy + zz);\r\n        te[4] = xy - wz;\r\n        te[8] = xz + wy;\r\n        te[1] = xy + wz;\r\n        te[5] = 1 - (xx + zz);\r\n        te[9] = yz - wx;\r\n        te[2] = xz - wy;\r\n        te[6] = yz + wx;\r\n        te[10] = 1 - (xx + yy);\r\n        return this;\r\n    }\r\n    transpose() {\r\n        let e;\r\n        let t;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Constructor of Vector3\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nclass Vector3 {\r\n    constructor(opt_src) {\r\n        const v = new Float32Array(3);\r\n        if (opt_src && typeof opt_src === 'object') {\r\n            v[0] = opt_src[0];\r\n            v[1] = opt_src[1];\r\n            v[2] = opt_src[2];\r\n        }\r\n        this.elements = v;\r\n    }\r\n    applyQuaternion({ elements }) {\r\n        const x = this.elements[0];\r\n        const y = this.elements[1];\r\n        const z = this.elements[2];\r\n        const qx = elements[0];\r\n        const qy = elements[1];\r\n        const qz = elements[2];\r\n        const qw = elements[3];\r\n        // calculate quat * vector\r\n        const ix = qw * x + qy * z - qz * y;\r\n        const iy = qw * y + qz * x - qx * z;\r\n        const iz = qw * z + qx * y - qy * x;\r\n        const iw = -qx * x - qy * y - qz * z;\r\n        // calculate result * inverse quat\r\n        this.elements[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        this.elements[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        this.elements[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return this;\r\n    }\r\n    /**\r\n      * Normalize.\r\n      * @return this\r\n      */\r\n    normalize() {\r\n        const v = this.elements;\r\n        let c = v[0];\r\n        let d = v[1];\r\n        let e = v[2];\r\n        let g = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1) {\r\n                return this;\r\n            }\r\n        }\r\n        else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return this;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n        return this;\r\n    }\r\n    /**\r\n         * Scales a vec3 by a scalar number\r\n         *\r\n         * @param {vec3} out the receiving vector\r\n         * @param {vec3} a the vector to scale\r\n         * @param {Number} b amount to scale the vector by\r\n         * @returns {vec3} out\r\n         */\r\n    add(b) {\r\n        const a = this.elements;\r\n        b = b.elements;\r\n        a[0] = a[0] + b[0];\r\n        a[1] = a[1] + b[1];\r\n        a[2] = a[2] + b[2];\r\n        return this;\r\n    }\r\n    addS(b) {\r\n        const a = this.elements;\r\n        a[0] = a[0] + b;\r\n        a[1] = a[1] + b;\r\n        a[2] = a[2] + b;\r\n        return this;\r\n    }\r\n    scale(b) {\r\n        const a = this.elements;\r\n        a[0] = a[0] * b;\r\n        a[1] = a[1] * b;\r\n        a[2] = a[2] * b;\r\n        return this;\r\n    }\r\n    distanceToSquared(x, y, z) {\r\n        let dx = this.elements[0] - x;\r\n        let dy = this.elements[1] - y;\r\n        let dz = this.elements[2] - z;\r\n        return dx * dx + dy * dy + dz * dz;\r\n    }\r\n    subtract(b) {\r\n        const out = this.elements;\r\n        b = b.elements;\r\n        out[0] = out[0] - b[0];\r\n        out[1] = out[1] - b[1];\r\n        out[2] = out[2] - b[2];\r\n        return this;\r\n    }\r\n    divideScalar(scalar) {\r\n        return this.scale(1 / scalar);\r\n    }\r\n    applyMatrix4({ elements }) {\r\n        let x = this.elements[0];\r\n        let y = this.elements[1];\r\n        let z = this.elements[2];\r\n        const e = elements;\r\n        this.elements[0] = e[0] * x + e[4] * y + e[8] * z + e[12];\r\n        this.elements[1] = e[1] * x + e[5] * y + e[9] * z + e[13];\r\n        this.elements[2] = e[2] * x + e[6] * y + e[10] * z + e[14];\r\n        const w = e[3] * x + e[7] * y + e[11] * z + e[15];\r\n        return this.divideScalar(w);\r\n    }\r\n    lerp(a, b, t) {\r\n        const out = this.elements;\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        let az = a[2];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        out[2] = az + t * (b[2] - az);\r\n        return this;\r\n    }\r\n    lengthSq() {\r\n        return this.elements[0] * this.elements[0] + this.elements[1] * this.elements[1] + this.elements[2] * this.elements[2];\r\n    }\r\n    multiply({ elements }) {\r\n        this.elements[0] *= elements[0];\r\n        this.elements[1] *= elements[1];\r\n        this.elements[2] *= elements[2];\r\n        return this;\r\n    }\r\n    static angle(a, b) {\r\n        const tempA = new Vector3(a.elements);\r\n        const tempB = new Vector3(b.elements);\r\n        tempA.normalize();\r\n        tempB.normalize();\r\n        const cosine = Vector3.dot(tempA, tempB);\r\n        if (cosine > 1.0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return Math.acos(cosine);\r\n        }\r\n    }\r\n    static cross(a, b) {\r\n        a = a.elements;\r\n        b = b.elements;\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        let az = a[2];\r\n        let bx = b[0];\r\n        let by = b[1];\r\n        let bz = b[2];\r\n        const out = new Vector3();\r\n        out.elements[0] = ay * bz - az * by;\r\n        out.elements[1] = az * bx - ax * bz;\r\n        out.elements[2] = ax * by - ay * bx;\r\n        return out;\r\n    }\r\n    static dot(a, b) {\r\n        a = a.elements;\r\n        b = b.elements;\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n    }\r\n    ;\r\n}\r\n/**\r\n * Constructor of Vector4\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nclass Vector4 {\r\n    constructor(opt_src) {\r\n        const v = new Float32Array(4);\r\n        if (opt_src && typeof opt_src === 'object') {\r\n            v[0] = opt_src[0];\r\n            v[1] = opt_src[1];\r\n            v[2] = opt_src[2];\r\n            v[3] = opt_src[3];\r\n        }\r\n        this.elements = v;\r\n    }\r\n    set(e) {\r\n        const a = this.elements;\r\n        a[0] = e[0];\r\n        a[1] = e[1];\r\n        a[2] = e[2];\r\n        a[3] = e[3];\r\n        return this;\r\n    }\r\n    add(b) {\r\n        const a = this.elements;\r\n        b = b.elements;\r\n        a[0] = b[0];\r\n        a[1] = b[1];\r\n        a[2] = b[2];\r\n        a[3] = a[3] + b[3];\r\n        return this;\r\n    }\r\n    normalize() {\r\n        let x = this.elements[0];\r\n        let y = this.elements[1];\r\n        let z = this.elements[2];\r\n        let w = this.elements[3];\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.elements[0] = x * len;\r\n            this.elements[1] = y * len;\r\n            this.elements[2] = z * len;\r\n            this.elements[3] = w * len;\r\n        }\r\n        return this;\r\n    }\r\n    setFromRotationMatrix({ elements }) {\r\n        const te = elements;\r\n        const m11 = te[0];\r\n        const m12 = te[4];\r\n        const m13 = te[8];\r\n        const m21 = te[1];\r\n        const m22 = te[5];\r\n        const m23 = te[9];\r\n        const m31 = te[2];\r\n        const m32 = te[6];\r\n        const m33 = te[10];\r\n        const trace = m11 + m22 + m33;\r\n        let s;\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n            this.elements[3] = 0.25 / s;\r\n            this.elements[0] = (m32 - m23) * s;\r\n            this.elements[1] = (m13 - m31) * s;\r\n            this.elements[2] = (m21 - m12) * s;\r\n        }\r\n        else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n            this.elements[3] = (m32 - m23) / s;\r\n            this.elements[0] = 0.25 * s;\r\n            this.elements[1] = (m12 + m21) / s;\r\n            this.elements[2] = (m13 + m31) / s;\r\n        }\r\n        else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n            this.elements[3] = (m13 - m31) / s;\r\n            this.elements[0] = (m12 + m21) / s;\r\n            this.elements[1] = 0.25 * s;\r\n            this.elements[2] = (m23 + m32) / s;\r\n        }\r\n        else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n            this.elements[3] = (m21 - m12) / s;\r\n            this.elements[0] = (m13 + m31) / s;\r\n            this.elements[1] = (m23 + m32) / s;\r\n            this.elements[2] = 0.25 * s;\r\n        }\r\n        return this;\r\n    }\r\n    lerp(a, b, t) {\r\n        const out = this.elements;\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        let az = a[2];\r\n        let aw = a[3];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        out[2] = az + t * (b[2] - az);\r\n        out[3] = aw + t * (b[3] - aw);\r\n        return this;\r\n    }\r\n}\r\nclass Vector2 {\r\n    constructor(opt_src) {\r\n        const v = new Float32Array(2);\r\n        if (opt_src && typeof opt_src === 'object') {\r\n            v[0] = opt_src[0];\r\n            v[1] = opt_src[1];\r\n        }\r\n        this.elements = v;\r\n    }\r\n    subtract(b) {\r\n        const out = this.elements;\r\n        b = b.elements;\r\n        out[0] = out[0] - b[0];\r\n        out[1] = out[1] - b[1];\r\n        return this;\r\n    }\r\n    lerp(a, b, t) {\r\n        const out = this.elements;\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        return this;\r\n    }\r\n}\r\n// { 0: right, 1: left, 2: bottom. 3: top, 4: far, 5: near }\r\nfunction Frustum(m) {\r\n    const planes = [new Vector4, new Vector4, new Vector4, new Vector4, new Vector4, new Vector4];\r\n    const me = m.elements;\r\n    let me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\r\n    let me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\r\n    let me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\r\n    let me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\r\n    planes[0].set([me3 - me0, me7 - me4, me11 - me8, me15 - me12]).normalize();\r\n    planes[1].set([me3 + me0, me7 + me4, me11 + me8, me15 + me12]).normalize();\r\n    planes[2].set([me3 + me1, me7 + me5, me11 + me9, me15 + me13]).normalize();\r\n    planes[3].set([me3 - me1, me7 - me5, me11 - me9, me15 - me13]).normalize();\r\n    planes[4].set([me3 - me2, me7 - me6, me11 - me10, me15 - me14]).normalize();\r\n    planes[5].set([me3 + me2, me7 + me6, me11 + me10, me15 + me14]).normalize();\r\n    return planes;\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/matrix.ts\n");

/***/ }),

/***/ "./src/objects.ts":
/*!************************!*\
  !*** ./src/objects.ts ***!
  \************************/
/*! exports provided: Scene, Object3D, Mesh, SkinnedMesh, Bone, Camera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scene\", function() { return Scene; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Object3D\", function() { return Object3D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Mesh\", function() { return Mesh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SkinnedMesh\", function() { return SkinnedMesh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bone\", function() { return Bone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Camera\", function() { return Camera; });\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matrix */ \"./src/matrix.ts\");\n\r\nclass Object3D {\r\n    constructor(name, parent) {\r\n        this.uuid = Math.floor(Date.now() * Math.random());\r\n        this.name = name;\r\n        this.children = [];\r\n        this.matrix = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"];\r\n        this.matrixWorld = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"];\r\n        this.parent = parent;\r\n    }\r\n    setPosition(translation, rotation, scale) {\r\n        if (rotation) {\r\n            this.matrix.makeRotationFromQuaternion(rotation);\r\n        }\r\n        if (scale) {\r\n            this.matrix.scale(new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](scale));\r\n        }\r\n        if (translation) {\r\n            this.matrix.setTranslate(new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](translation));\r\n        }\r\n    }\r\n    setMatrix(matrix) {\r\n        this.matrix.set(matrix);\r\n    }\r\n    setMatrixWorld(matrix) {\r\n        this.matrixWorld.set(matrix);\r\n    }\r\n}\r\nclass Mesh extends Object3D {\r\n    constructor(name, parent) {\r\n        super(name, parent);\r\n        this.geometry = {\r\n            boundingSphere: {\r\n                center: new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"],\r\n                radius: null,\r\n                min: null,\r\n                max: null\r\n            },\r\n            UBO: null,\r\n            VAO: null,\r\n            indicesBuffer: null,\r\n            attributes: null,\r\n            targets: null,\r\n            blend: null,\r\n            uniforms: null,\r\n            SKIN: null\r\n        };\r\n        this.material = {\r\n            blend: null,\r\n            uniforms: null,\r\n            alphaMode: null,\r\n            UBO: null,\r\n            pbrMetallicRoughness: null\r\n        };\r\n        this.program = null;\r\n        this.defines = null;\r\n        this.mode = 4;\r\n    }\r\n    setBlend(value) {\r\n        this.material.blend = value;\r\n    }\r\n    setMaterial(material) {\r\n        this.material = material;\r\n        this.material.uniforms = {\r\n            baseColorTexture: null,\r\n            metallicRoughnessTexture: null,\r\n            normalTexture: null,\r\n            occlusionTexture: null,\r\n            emissiveTexture: null\r\n        };\r\n    }\r\n    calculateBounding() {\r\n        const vertices = this.geometry.attributes.POSITION;\r\n        let maxRadiusSq = 0;\r\n        this.geometry.boundingSphere.center\r\n            .add(this.geometry.boundingSphere.min)\r\n            .add(this.geometry.boundingSphere.max)\r\n            .scale(0.5);\r\n        for (let i = 0; i < vertices.length; i = i + 3) {\r\n            maxRadiusSq = Math.max(maxRadiusSq, this.geometry.boundingSphere.center.distanceToSquared(vertices[i], vertices[i + 1], vertices[i + 2]));\r\n        }\r\n        this.geometry.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n    }\r\n    setBoundingBox({ min, max }) {\r\n        this.geometry.boundingSphere.min = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](min);\r\n        this.geometry.boundingSphere.max = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](max);\r\n        this.calculateBounding();\r\n    }\r\n    setIndicesBuffer(value) {\r\n        this.geometry.indicesBuffer = value;\r\n    }\r\n    setAttributes(value) {\r\n        this.geometry.attributes = value;\r\n    }\r\n    setTargets(value) {\r\n        this.geometry.targets = value;\r\n    }\r\n    setProgram(value) {\r\n        this.program = value;\r\n    }\r\n    setMode(value) {\r\n        this.mode = value;\r\n    }\r\n    isVisible(planes) {\r\n        const c = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](this.geometry.boundingSphere.center.elements).applyMatrix4(this.matrixWorld);\r\n        const r = this.geometry.boundingSphere.radius * this.matrixWorld.getMaxScaleOnAxis();\r\n        let dist;\r\n        let visible = true;\r\n        for (const p of planes) {\r\n            dist = p.elements[0] * c.elements[0] + p.elements[1] * c.elements[1] + p.elements[2] * c.elements[2] + p.elements[3];\r\n            if (dist < -r) {\r\n                visible = false;\r\n                break;\r\n            }\r\n        }\r\n        this.distance = dist + r;\r\n        return visible;\r\n    }\r\n}\r\nclass SkinnedMesh extends Mesh {\r\n    constructor(name, parent) {\r\n        super(name, parent);\r\n    }\r\n    setSkin(value) {\r\n        this.skin = value;\r\n        return this;\r\n    }\r\n    getJointMatrix() {\r\n        const m = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"](this.matrixWorld).invert();\r\n        const resArray = [];\r\n        for (let mi = 0; mi < this.boneInverses.length; mi++) {\r\n            const res = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]()\r\n                .multiply(m)\r\n                .multiply(this.bones[mi].matrixWorld)\r\n                .multiply(this.boneInverses[mi]);\r\n            resArray.push(res);\r\n        }\r\n        return resArray;\r\n    }\r\n}\r\nclass Bone extends Object3D {\r\n}\r\nclass Camera extends Object3D {\r\n    constructor(name, parent) {\r\n        super(name, parent);\r\n        this.matrixWorldInvert = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]();\r\n        this.projection = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]();\r\n    }\r\n    setProjection(matrix) {\r\n        this.projection.set(matrix);\r\n    }\r\n    setMatrixWorld(matrix) {\r\n        super.setMatrixWorld(matrix);\r\n        this.matrixWorldInvert.setInverseOf(this.matrixWorld);\r\n    }\r\n    setZ(z) {\r\n        this.matrix.elements[14] = z;\r\n        this.setMatrixWorld(this.matrix.elements);\r\n    }\r\n    getViewProjMatrix() {\r\n        const m = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]();\r\n        m.multiply(this.projection);\r\n        m.multiply(this.matrixWorldInvert);\r\n        return m;\r\n    }\r\n}\r\nclass Scene {\r\n    constructor() {\r\n        this.opaqueChildren = [];\r\n        this.transparentChildren = [];\r\n        this.children = [];\r\n        this.bin = [];\r\n        this.matrixWorld = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]();\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/objects.ts\n");

/***/ }),

/***/ "./src/parse.ts":
/*!**********************!*\
  !*** ./src/parse.ts ***!
  \**********************/
/*! exports provided: Parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parse\", function() { return Parse; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects */ \"./src/objects.ts\");\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./matrix */ \"./src/matrix.ts\");\n/* harmony import */ var _shaders_vertex_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shaders/vertex.glsl */ \"./src/shaders/vertex.glsl\");\n/* harmony import */ var _shaders_vertex_glsl__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_shaders_vertex_glsl__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _shaders_fragment_glsl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shaders/fragment.glsl */ \"./src/shaders/fragment.glsl\");\n/* harmony import */ var _shaders_fragment_glsl__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_shaders_fragment_glsl__WEBPACK_IMPORTED_MODULE_4__);\n\r\n\r\n\r\n\r\n\r\nlet gl;\r\nlet sceneTextureCount = 0;\r\nclass Parse {\r\n    constructor(url) {\r\n        this.url = url;\r\n        this.host = url.substr(0, url.lastIndexOf('/') + 1);\r\n        this.tracks = [];\r\n        this.skins = [];\r\n        this.textures = null;\r\n        this.samplers = null;\r\n        this.arrayBuffer = null;\r\n        this.cameras = [];\r\n        this.programs = {};\r\n    }\r\n    setScene(scene) {\r\n        this.scene = scene;\r\n    }\r\n    setGl(g) {\r\n        gl = g;\r\n    }\r\n    setCamera(camera, aspect, zoom) {\r\n        this._camera = camera;\r\n        this.aspect = aspect;\r\n        this.zoom = zoom;\r\n    }\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas;\r\n    }\r\n    setResize(resize) {\r\n        this.resize = resize;\r\n    }\r\n    setUpdateCamera(updateCamera) {\r\n        this.updateCamera = updateCamera;\r\n    }\r\n    get width() {\r\n        return this.canvas.offsetWidth;\r\n    }\r\n    getBuffer() {\r\n        return Promise.all(this.scene.bin.map(url => fetch(`${this.host}${url}`).then(res => res.arrayBuffer())))\r\n            .then(buffers => {\r\n            this.arrayBuffer = buffers;\r\n        });\r\n    }\r\n    compileShader(vertexShader, fragmentShader) {\r\n        const program = gl.createProgram();\r\n        Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"compileShader\"])(gl.VERTEX_SHADER, vertexShader, program);\r\n        Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"compileShader\"])(gl.FRAGMENT_SHADER, fragmentShader, program);\r\n        gl.linkProgram(program);\r\n        return program;\r\n    }\r\n    buildPrim(parent, name, skin, weights, p) {\r\n        const indicesAccessor = this.json.accessors[p.indices];\r\n        const vertexAccessor = new Map;\r\n        for (const a in p.attributes) {\r\n            vertexAccessor.set(a, this.json.accessors[p.attributes[a]]);\r\n        }\r\n        const targets = [];\r\n        if (p.targets) {\r\n            for (const target of p.targets) {\r\n                const vertexAcc = {};\r\n                for (const a in target) {\r\n                    vertexAcc[a] = this.json.accessors[target[a]];\r\n                    const accessor = vertexAcc[a];\r\n                    const bufferView = this.json.bufferViews[accessor.bufferView];\r\n                    vertexAcc[a] = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[bufferView.buffer], accessor.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(bufferView.byteOffset, accessor.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(accessor.type) * accessor.count);\r\n                }\r\n                targets.push(vertexAcc);\r\n            }\r\n        }\r\n        const material = p.material !== undefined ? JSON.parse(JSON.stringify(this.json.materials[p.material])) : { pbrMetallicRoughness: { baseColorFactor: [0.8, 0.8, 0.8, 1.0] } };\r\n        const defines = [];\r\n        if (material.pbrMetallicRoughness.metallicRoughnessTexture) {\r\n            material.pbrMetallicRoughness.metallicRoughnessTexture = Object.assign({}, this.textures[material.pbrMetallicRoughness.metallicRoughnessTexture.index]);\r\n            defines.push({ name: 'USE_PBR' });\r\n            defines.push({ name: 'METALROUGHNESSMAP' });\r\n        }\r\n        if (material.normalTexture) {\r\n            material.normalTexture = Object.assign({}, this.textures[material.normalTexture.index]);\r\n            defines.push({ name: 'NORMALMAP' });\r\n        }\r\n        if (material.occlusionTexture) {\r\n            material.occlusionTexture = Object.assign({}, this.textures[material.occlusionTexture.index]);\r\n            defines.push({ name: 'OCCLUSIONMAP' });\r\n        }\r\n        if (material.pbrMetallicRoughness.baseColorTexture) {\r\n            material.pbrMetallicRoughness.baseColorTexture = Object.assign({}, this.textures[material.pbrMetallicRoughness.baseColorTexture.index]);\r\n            defines.push({ name: 'BASECOLORTEXTURE' });\r\n        }\r\n        if (material.emissiveTexture) {\r\n            material.emissiveTexture = Object.assign({}, this.textures[material.emissiveTexture.index]);\r\n            defines.push({ name: 'EMISSIVEMAP' });\r\n        }\r\n        if (skin !== undefined) {\r\n            defines.push({ name: 'JOINTNUMBER', value: this.skins[skin].jointNames.length });\r\n        }\r\n        if (p.attributes.TANGENT || material.normalTexture) {\r\n            defines.push({ name: 'TANGENT' });\r\n        }\r\n        let program;\r\n        if (this.programs[defines.map(define => define.name).join('')]) {\r\n            program = this.programs[defines.map(define => define.name).join('')];\r\n        }\r\n        else {\r\n            const defineStr = defines.map(define => `#define ${define.name} ${define.value || 1}` + '\\n').join('');\r\n            program = this.compileShader(_shaders_vertex_glsl__WEBPACK_IMPORTED_MODULE_3___default.a.replace(/\\n/, `\\n${defineStr}`), _shaders_fragment_glsl__WEBPACK_IMPORTED_MODULE_4___default.a.replace(/\\n/, `\\n${defineStr}`));\r\n            this.programs[defines.map(define => define.name).join('')] = program;\r\n        }\r\n        let indicesBuffer;\r\n        if (indicesAccessor) {\r\n            const bufferView = this.json.bufferViews[indicesAccessor.bufferView];\r\n            indicesBuffer = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[bufferView.buffer], indicesAccessor.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(bufferView.byteOffset, indicesAccessor.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(indicesAccessor.type) * indicesAccessor.count);\r\n        }\r\n        const boundingBox = {\r\n            min: vertexAccessor.get('POSITION').min,\r\n            max: vertexAccessor.get('POSITION').max\r\n        };\r\n        const vertexBuffers = {};\r\n        for (const k of vertexAccessor.keys()) {\r\n            const accessor = vertexAccessor.get(k);\r\n            const bufferView = this.json.bufferViews[accessor.bufferView];\r\n            vertexBuffers[k] = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[bufferView.buffer], accessor.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(bufferView.byteOffset, accessor.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(accessor.type) * accessor.count, bufferView.byteStride, accessor.count);\r\n            if (p.targets && k in p.targets[0]) {\r\n                let offset = 0;\r\n                const geometry = vertexBuffers[k];\r\n                vertexBuffers[k] = new Float32Array(geometry.length);\r\n                for (let i = 0; i < vertexBuffers[k].length; i++) {\r\n                    if (k === 'TANGENT' && (i + 1) % 4 === 0) {\r\n                        offset++;\r\n                        continue;\r\n                    }\r\n                    vertexBuffers[k][i] = geometry[i] + weights[0] * targets[0][k][i - offset] + weights[1] * targets[1][k][i - offset];\r\n                }\r\n            }\r\n        }\r\n        if (material.normalTexture && p.attributes.TANGENT === undefined) {\r\n            vertexBuffers.TANGENT = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateBinormals\"])(indicesBuffer, vertexBuffers.POSITION, vertexBuffers.NORMAL, vertexBuffers.TEXCOORD_0);\r\n        }\r\n        const mesh = skin !== undefined ? new _objects__WEBPACK_IMPORTED_MODULE_1__[\"SkinnedMesh\"](name, parent).setSkin(skin) : new _objects__WEBPACK_IMPORTED_MODULE_1__[\"Mesh\"](name, parent);\r\n        mesh.setProgram(program);\r\n        mesh.setMode(p.mode);\r\n        mesh.setMaterial(material);\r\n        mesh.setAttributes(vertexBuffers);\r\n        mesh.setIndicesBuffer(indicesBuffer);\r\n        mesh.setBoundingBox(boundingBox);\r\n        mesh.setTargets(targets);\r\n        const m = new _matrix__WEBPACK_IMPORTED_MODULE_2__[\"Matrix4\"];\r\n        m.multiply(mesh.parent.matrixWorld);\r\n        m.multiply(mesh.matrix);\r\n        mesh.setMatrixWorld(m.elements);\r\n        const VAO = gl.createVertexArray();\r\n        gl.bindVertexArray(VAO);\r\n        for (const k in vertexBuffers) {\r\n            const VBO = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, VBO);\r\n            gl.bufferData(gl.ARRAY_BUFFER, vertexBuffers[k], gl.STATIC_DRAW);\r\n            const index = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getAttributeIndex\"])(k);\r\n            gl.enableVertexAttribArray(index[0]);\r\n            gl.vertexAttribPointer(index[0], index[1], index[2], false, 0, 0);\r\n        }\r\n        if (indicesBuffer) {\r\n            const VBO = gl.createBuffer();\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, VBO);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer, gl.STATIC_DRAW);\r\n        }\r\n        mesh.geometry.VAO = VAO;\r\n        gl.bindVertexArray(null);\r\n        if (material.pbrMetallicRoughness.baseColorTexture) {\r\n            mesh.material.uniforms.baseColorTexture = gl.getUniformLocation(mesh.program, 'baseColorTexture');\r\n        }\r\n        if (material.pbrMetallicRoughness.metallicRoughnessTexture) {\r\n            mesh.material.uniforms.metallicRoughnessTexture = gl.getUniformLocation(mesh.program, 'metallicRoughnessTexture');\r\n        }\r\n        if (material.normalTexture) {\r\n            mesh.material.uniforms.normalTexture = gl.getUniformLocation(mesh.program, 'normalTexture');\r\n        }\r\n        if (material.occlusionTexture) {\r\n            mesh.material.uniforms.occlusionTexture = gl.getUniformLocation(mesh.program, 'occlusionTexture');\r\n        }\r\n        if (material.emissiveTexture) {\r\n            mesh.material.uniforms.emissiveTexture = gl.getUniformLocation(mesh.program, 'emissiveTexture');\r\n        }\r\n        return mesh;\r\n    }\r\n    walkByMesh(parent, name) {\r\n        const el = this.json.nodes[name];\r\n        let child;\r\n        if (el.camera !== undefined) {\r\n            const proj = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateProjection\"])(this.json.cameras[el.camera], this.aspect, this.zoom);\r\n            child = new _objects__WEBPACK_IMPORTED_MODULE_1__[\"Camera\"](name, parent);\r\n            child.props = this.json.cameras[el.camera];\r\n            child.setProjection(proj.elements);\r\n            this._camera = child;\r\n            this.updateCamera(this._camera);\r\n            this.cameras.push(child);\r\n        }\r\n        else {\r\n            if (el.isBone !== undefined) {\r\n                child = new _objects__WEBPACK_IMPORTED_MODULE_1__[\"Bone\"](name, parent);\r\n            }\r\n            else {\r\n                child = new _objects__WEBPACK_IMPORTED_MODULE_1__[\"Object3D\"](name, parent);\r\n            }\r\n        }\r\n        if (el.translation || el.rotation || el.scale) {\r\n            child.setPosition(el.translation, el.rotation, el.scale);\r\n        }\r\n        else if (el.matrix) {\r\n            child.setMatrix(el.matrix);\r\n        }\r\n        const m = new _matrix__WEBPACK_IMPORTED_MODULE_2__[\"Matrix4\"];\r\n        m.multiply(child.parent.matrixWorld);\r\n        m.multiply(child.matrix);\r\n        child.setMatrixWorld(m.elements);\r\n        parent.children.push(child);\r\n        parent = child;\r\n        if (el.mesh !== undefined) {\r\n            if (el.skin !== undefined) {\r\n                for (const join of this.skins[el.skin].jointNames) {\r\n                    Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"walk\"])(this.scene, this.buildBones.bind(this, join, this.skins[el.skin]));\r\n                }\r\n            }\r\n            parent.children.push(...this.json.meshes[el.mesh].primitives.map(this.buildPrim.bind(this, parent, this.json.meshes[el.mesh].name, el.skin, this.json.meshes[el.mesh].weights)));\r\n        }\r\n        if (el.children && el.children.length) {\r\n            el.children.forEach(this.walkByMesh.bind(this, parent));\r\n        }\r\n    }\r\n    calculateFov() {\r\n        let biggestMesh;\r\n        Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"walk\"])(this.scene, node => {\r\n            if (node instanceof _objects__WEBPACK_IMPORTED_MODULE_1__[\"Mesh\"]) {\r\n                if (!biggestMesh) {\r\n                    biggestMesh = node;\r\n                }\r\n                if (node.geometry.boundingSphere.radius > biggestMesh.geometry.boundingSphere.radius) {\r\n                    biggestMesh = node;\r\n                }\r\n            }\r\n        });\r\n        const a = Math.abs;\r\n        const min = biggestMesh.geometry.boundingSphere.min.elements;\r\n        const max = biggestMesh.geometry.boundingSphere.max.elements;\r\n        this._camera.modelXSize = Math.max(a(min[0]), a(min[2]), a(max[0]), a(max[2]), Math.sqrt(min[0] * min[0] + min[2] * min[2]), Math.sqrt(max[0] * max[0] + max[2] * max[2]));\r\n        this._camera.modelYSize = Math.max(a(min[1]), a(min[2]), a(max[1]), a(max[2]));\r\n        this._camera.modelSize = Math.max(this._camera.modelYSize, this._camera.modelXSize);\r\n        this.resize();\r\n    }\r\n    buildMesh() {\r\n        this.json.scenes[this.json.scene !== undefined ? this.json.scene : 0].nodes.forEach(n => {\r\n            if (this.json.nodes[n].children && this.json.nodes[n].children.length) {\r\n                this.walkByMesh(this.scene, n);\r\n            }\r\n            if (this.json.nodes[n].mesh !== undefined) {\r\n                this.walkByMesh(this.scene, n);\r\n            }\r\n            if (this.json.nodes[n].camera !== undefined) {\r\n                this.walkByMesh(this.scene, n);\r\n            }\r\n        });\r\n        this.calculateFov();\r\n        const planes = Object(_matrix__WEBPACK_IMPORTED_MODULE_2__[\"Frustum\"])(this._camera.getViewProjMatrix());\r\n        Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"walk\"])(this.scene, mesh => {\r\n            if (mesh instanceof _objects__WEBPACK_IMPORTED_MODULE_1__[\"SkinnedMesh\"]) {\r\n                mesh.bones = this.skins[mesh.skin].bones;\r\n                mesh.boneInverses = this.skins[mesh.skin].boneInverses;\r\n                const jointMatrix = mesh.getJointMatrix();\r\n                const matrices = new Float32Array(jointMatrix.length * 16);\r\n                let i = 0;\r\n                for (const j of jointMatrix) {\r\n                    matrices.set(j.elements, 0 + 16 * i);\r\n                    i++;\r\n                }\r\n                const uIndex = gl.getUniformBlockIndex(mesh.program, 'Skin');\r\n                gl.uniformBlockBinding(mesh.program, uIndex, 2);\r\n                const UBO = gl.createBuffer();\r\n                gl.bindBuffer(gl.UNIFORM_BUFFER, UBO);\r\n                gl.bufferData(gl.UNIFORM_BUFFER, matrices, gl.DYNAMIC_DRAW);\r\n                mesh.geometry.SKIN = UBO;\r\n                gl.bindBuffer(gl.UNIFORM_BUFFER, null);\r\n            }\r\n            if (mesh instanceof _objects__WEBPACK_IMPORTED_MODULE_1__[\"Mesh\"]) {\r\n                const materials = new Float32Array(12);\r\n                materials.set(mesh.material.pbrMetallicRoughness.baseColorFactor || [0.8, 0.8, 0.8, 1.0]);\r\n                materials.set([this._camera.matrixWorld.elements[12], this._camera.matrixWorld.elements[13], this._camera.matrixWorld.elements[14]], 4);\r\n                materials.set([this._camera.matrixWorld.elements[12], this._camera.matrixWorld.elements[13], this._camera.matrixWorld.elements[14]], 8);\r\n                const mIndex = gl.getUniformBlockIndex(mesh.program, 'Material');\r\n                gl.uniformBlockBinding(mesh.program, mIndex, 1);\r\n                const mUBO = gl.createBuffer();\r\n                gl.bindBuffer(gl.UNIFORM_BUFFER, mUBO);\r\n                gl.bufferData(gl.UNIFORM_BUFFER, materials, gl.STATIC_DRAW);\r\n                mesh.material.UBO = mUBO;\r\n                const normalMatrix = new _matrix__WEBPACK_IMPORTED_MODULE_2__[\"Matrix4\"](mesh.matrixWorld);\r\n                normalMatrix.invert().transpose();\r\n                const matrices = new Float32Array(64);\r\n                matrices.set(mesh.matrixWorld.elements, 0);\r\n                matrices.set(normalMatrix.elements, 16);\r\n                matrices.set(this._camera.matrixWorldInvert.elements, 32);\r\n                matrices.set(this._camera.projection.elements, 48);\r\n                const uIndex = gl.getUniformBlockIndex(mesh.program, 'Matrices');\r\n                gl.uniformBlockBinding(mesh.program, uIndex, 0);\r\n                const UBO = gl.createBuffer();\r\n                gl.bindBuffer(gl.UNIFORM_BUFFER, UBO);\r\n                gl.bufferData(gl.UNIFORM_BUFFER, matrices, gl.DYNAMIC_DRAW);\r\n                mesh.geometry.UBO = UBO;\r\n                gl.bindBuffer(gl.UNIFORM_BUFFER, null);\r\n                if (mesh.isVisible(planes)) {\r\n                    if (mesh.material.alphaMode) {\r\n                        this.scene.transparentChildren.push(mesh);\r\n                    }\r\n                    else {\r\n                        this.scene.opaqueChildren.push(mesh);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.scene.transparentChildren.sort((a, b) => b.distance - a.distance);\r\n        return true;\r\n    }\r\n    buildAnimation() {\r\n        if (!this.json.animations) {\r\n            return true;\r\n        }\r\n        for (const animation of this.json.animations) {\r\n            for (const channel of animation.channels) {\r\n                const sampler = animation.samplers[channel.sampler];\r\n                if (sampler) {\r\n                    const { target } = channel;\r\n                    const name = target.node;\r\n                    const input = animation.parameters !== undefined ? animation.parameters[sampler.input] : sampler.input;\r\n                    const output = animation.parameters !== undefined ? animation.parameters[sampler.output] : sampler.output;\r\n                    const inputAccessor = this.json.accessors[input];\r\n                    const outputAccessor = this.json.accessors[output];\r\n                    const inputBuffer = this.json.bufferViews[inputAccessor.bufferView];\r\n                    const outputBuffer = this.json.bufferViews[outputAccessor.bufferView];\r\n                    const inputArray = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[inputBuffer.buffer], inputAccessor.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(inputBuffer.byteOffset, inputAccessor.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(inputAccessor.type) * inputAccessor.count);\r\n                    const outputArray = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[outputBuffer.buffer], outputAccessor.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(outputBuffer.byteOffset, outputAccessor.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(outputAccessor.type) * outputAccessor.count);\r\n                    const component = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getAnimationComponent\"])(target.path);\r\n                    const keys = [];\r\n                    for (let i = 0; i < inputArray.length; i++) {\r\n                        const firstT = inputArray[i];\r\n                        const firstV = outputArray.slice(i * component, (i + 1) * component);\r\n                        keys.push({\r\n                            time: firstT,\r\n                            value: firstV\r\n                        });\r\n                    }\r\n                    const meshes = [];\r\n                    Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"walk\"])(this.scene, node => {\r\n                        if (node.name === name) {\r\n                            if (target.path === 'weights' && node instanceof _objects__WEBPACK_IMPORTED_MODULE_1__[\"Object3D\"]) {\r\n                                node = node.children[0];\r\n                            }\r\n                            meshes.push(node);\r\n                        }\r\n                    });\r\n                    if (meshes.length) {\r\n                        this.tracks.push({\r\n                            stoped: false,\r\n                            meshes: meshes,\r\n                            type: target.path,\r\n                            name: `${meshes[0].name}.${target.path}`,\r\n                            keys: keys,\r\n                            interpolation: sampler.interpolation\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    buildSkin() {\r\n        if (!this.json.skins) {\r\n            return true;\r\n        }\r\n        for (const skin of this.json.skins) {\r\n            const acc = this.json.accessors[skin.inverseBindMatrices];\r\n            const buffer = this.json.bufferViews[acc.bufferView];\r\n            const array = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"buildArray\"])(this.arrayBuffer[buffer.buffer], acc.componentType, Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"calculateOffset\"])(buffer.byteOffset, acc.byteOffset), Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDataType\"])(acc.type) * acc.count);\r\n            const v = {\r\n                jointNames: skin.joints,\r\n                inverseBindMatrices: array,\r\n                bones: [],\r\n                boneInverses: []\r\n            };\r\n            let i = 0;\r\n            for (const join of v.jointNames) {\r\n                //walk(this.scene, this.buildBones.bind(this, join, v));\r\n                this.json.nodes[join].isBone = true;\r\n                const m = v.inverseBindMatrices;\r\n                const mat = new _matrix__WEBPACK_IMPORTED_MODULE_2__[\"Matrix4\"]().set(m.slice(i * 16, (i + 1) * 16));\r\n                v.boneInverses.push(mat);\r\n                i++;\r\n            }\r\n            this.skins.push(v);\r\n        }\r\n        return true;\r\n    }\r\n    buildBones(join, v, node) {\r\n        if (node.name === join) {\r\n            v.bones.push(node);\r\n        }\r\n    }\r\n    getJson() {\r\n        return fetch(this.url)\r\n            .then(res => res.json())\r\n            .then(j => {\r\n            for (const key in j.buffers) {\r\n                this.scene.bin.push(j.buffers[key].uri);\r\n            }\r\n            this.json = j;\r\n            return true;\r\n        });\r\n    }\r\n    initTextures() {\r\n        if (!this.json.textures) {\r\n            return true;\r\n        }\r\n        const samplers = this.json.samplers || [{}];\r\n        this.samplers = samplers.map(s => {\r\n            const sampler = gl.createSampler();\r\n            gl.samplerParameteri(sampler, gl.TEXTURE_MIN_FILTER, s.minFilter || 9986);\r\n            gl.samplerParameteri(sampler, gl.TEXTURE_MAG_FILTER, s.magFilter || 9729);\r\n            gl.samplerParameteri(sampler, gl.TEXTURE_WRAP_S, s.wrapS || 10497);\r\n            gl.samplerParameteri(sampler, gl.TEXTURE_WRAP_T, s.wrapT || 10497);\r\n            return sampler;\r\n        });\r\n        const promiseArr = this.json.textures.map(t => {\r\n            return new Promise((resolve, reject) => {\r\n                const sampler = this.samplers[t.sampler !== undefined ? t.sampler : 0];\r\n                const source = this.json.images[t.source];\r\n                const image = new Image();\r\n                image.onload = () => {\r\n                    resolve(this.handleTextureLoaded(sampler, image));\r\n                };\r\n                image.onerror = err => {\r\n                    reject(err);\r\n                };\r\n                image.crossOrigin = 'anonymous';\r\n                image.src = `${this.host}${source.uri}`;\r\n            });\r\n        });\r\n        return Promise.all(promiseArr)\r\n            .then(textures => {\r\n            this.textures = textures;\r\n            return true;\r\n        });\r\n    }\r\n    handleTextureLoaded(sampler, image) {\r\n        const t = {\r\n            image: image.src.substr(image.src.lastIndexOf('/')),\r\n            data: gl.createTexture(),\r\n            count: sceneTextureCount\r\n        };\r\n        gl.activeTexture(gl[`TEXTURE${sceneTextureCount}`]);\r\n        gl.bindTexture(gl.TEXTURE_2D, t.data);\r\n        gl.bindSampler(0, sampler);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        sceneTextureCount++;\r\n        return t;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/parse.ts\n");

/***/ }),

/***/ "./src/redcube.ts":
/*!************************!*\
  !*** ./src/redcube.ts ***!
  \************************/
/*! exports provided: RedCube */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedCube\", function() { return RedCube; });\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objects */ \"./src/objects.ts\");\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matrix */ \"./src/matrix.ts\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ \"./src/events.ts\");\n/* harmony import */ var _fps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fps */ \"./src/fps.ts\");\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parse */ \"./src/parse.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/// <reference path='../index.d.ts'/>\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet gl;\r\nclass RedCube {\r\n    constructor(url, canvas, znear) {\r\n        this.reflow = true;\r\n        this.scene = new _objects__WEBPACK_IMPORTED_MODULE_0__[\"Scene\"]();\r\n        this.color = [0.8, 0.8, 0.8, 1.0];\r\n        this.url = url;\r\n        this.host = url.substr(0, url.lastIndexOf('/') + 1);\r\n        this.canvas = canvas;\r\n        this.aspect = this.canvas.offsetWidth / this.canvas.offsetHeight;\r\n        this._camera = new _objects__WEBPACK_IMPORTED_MODULE_0__[\"Camera\"];\r\n        this._camera.isInitial = true;\r\n        this._camera.props = {\r\n            type: 'perspective',\r\n            perspective: {\r\n                yfov: 0.6,\r\n                znear: znear || 1,\r\n                zfar: 2e6,\r\n                aspectRatio: null\r\n            }\r\n        };\r\n        this.zoom = 1;\r\n        this._camera.setZ(5);\r\n        this.events = new _events__WEBPACK_IMPORTED_MODULE_2__[\"Events\"](this.redraw.bind(this));\r\n        this.fps = new _fps__WEBPACK_IMPORTED_MODULE_3__[\"FPS\"];\r\n        //this.env = new Env;\r\n        //this.env.setCamera(this._camera);\r\n        // this.PP = new PostProcessing;\r\n        // this.PP.setCanvas(this.canvas);\r\n        // this.PP.setCamera(this._camera);\r\n        this.parse = new _parse__WEBPACK_IMPORTED_MODULE_4__[\"Parse\"](url);\r\n        this.parse.setScene(this.scene);\r\n        this.parse.setCamera(this._camera, this.aspect, this.zoom);\r\n        this.parse.setUpdateCamera(this.updateCamera.bind(this));\r\n        this.parse.setCanvas(this.canvas);\r\n        this.parse.setResize(this.resize.bind(this));\r\n    }\r\n    init() {\r\n        return this.parse.getJson()\r\n            .then(this.glInit.bind(this))\r\n            .then(this.parse.initTextures.bind(this.parse))\r\n            .then(this.parse.getBuffer.bind(this.parse))\r\n            .then(this.parse.buildSkin.bind(this.parse))\r\n            .then(this.parse.buildMesh.bind(this.parse))\r\n            .then(this.parse.buildAnimation.bind(this.parse))\r\n            .then(this.draw.bind(this))\r\n            .catch(console.error);\r\n    }\r\n    updateCamera(camera) {\r\n        this._camera = camera;\r\n    }\r\n    setColor(color) {\r\n        this.color = color;\r\n    }\r\n    redraw(type, coordsStart, coordsMove) {\r\n        if (type === 'zoom') {\r\n            this.zoom = coordsStart;\r\n            this._camera.setProjection(Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calculateProjection\"])(this._camera.props, this.aspect, this.zoom).elements);\r\n            this.needUpdateProjection = true;\r\n        }\r\n        if (type === 'rotate') {\r\n            const coordsStartWorld = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"canvasToWorld\"])(coordsStart, this._camera.projection, this.canvas.offsetWidth, this.canvas.offsetHeight);\r\n            const coordsMoveWorld = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"canvasToWorld\"])(coordsMove, this._camera.projection, this.canvas.offsetWidth, this.canvas.offsetHeight);\r\n            const p0 = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"](Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"sceneToArcBall\"])(coordsStartWorld));\r\n            const p1 = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"](Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"sceneToArcBall\"])(coordsMoveWorld));\r\n            const angle = _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"].angle(p0, p1) * 5;\r\n            if (angle < 1e-6 || isNaN(angle)) {\r\n                return;\r\n            }\r\n            const v = _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"].cross(p0, p1).normalize();\r\n            const sin = Math.sin(angle / 2);\r\n            const q = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector4\"]([v.elements[0] * sin, v.elements[1] * sin, v.elements[2] * sin, Math.cos(angle / 2)]);\r\n            const m = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Matrix4\"]();\r\n            m.makeRotationFromQuaternion(q.elements);\r\n            m.multiply(this._camera.matrixWorld);\r\n            this._camera.setMatrixWorld(m.elements);\r\n            this.needUpdateView = true;\r\n            // const diff = Vector3.angle(new Vector3([0, 1, 0]).applyQuaternion(new Vector4().setFromRotationMatrix(m)), new Vector3([0, 1, 0]));\r\n            // if (diff <= Math.PI / 2) {\r\n            //     this.needUpdateView = true;\r\n            // }\r\n        }\r\n        if (type === 'pan') {\r\n            const coordsStartWorld = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"canvasToWorld\"])(coordsStart, this._camera.projection, this.canvas.offsetWidth, this.canvas.offsetHeight);\r\n            const coordsMoveWorld = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"canvasToWorld\"])(coordsMove, this._camera.projection, this.canvas.offsetWidth, this.canvas.offsetHeight);\r\n            const p0 = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"]([...coordsStartWorld, 0]);\r\n            const p1 = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"]([...coordsMoveWorld, 0]);\r\n            const pan = this._camera.modelSize * 100;\r\n            const delta = p1.subtract(p0).scale(pan);\r\n            this._camera.matrixWorld.translate(delta.elements[0], delta.elements[1], 0);\r\n            this._camera.setMatrixWorld(this._camera.matrixWorld.elements);\r\n            this.needUpdateView = true;\r\n        }\r\n        if (type === 'resize') {\r\n            this.resize();\r\n            this.needUpdateProjection = true;\r\n        }\r\n        this.reflow = true;\r\n    }\r\n    resize() {\r\n        this.aspect = this.canvas.offsetWidth / this.canvas.offsetHeight;\r\n        this.canvas.width = this.canvas.offsetWidth * devicePixelRatio;\r\n        this.canvas.height = this.canvas.offsetHeight * devicePixelRatio;\r\n        gl.viewport(0, 0, this.canvas.offsetWidth * devicePixelRatio, this.canvas.offsetHeight * devicePixelRatio);\r\n        this._camera.setProjection(Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calculateProjection\"])(this._camera.props, this.aspect, this.zoom).elements);\r\n        if (this._camera.isInitial) {\r\n            const z = 1 / this.canvas.width * this._camera.modelSize * 5000;\r\n            this._camera.setZ(this.z || z);\r\n            this.needUpdateView = true;\r\n        }\r\n    }\r\n    buildBuffer(indexBuffer, ...buffer) {\r\n        if (indexBuffer) {\r\n            if (indexBuffer.buffer) {\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer);\r\n            }\r\n            else {\r\n                const bufferGL = gl.createBuffer();\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferGL);\r\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBuffer.value, gl.STATIC_DRAW);\r\n                indexBuffer.buffer = bufferGL;\r\n            }\r\n        }\r\n        buffer.forEach(b => {\r\n            if (!b.buffer) {\r\n                const bufferGL = gl.createBuffer();\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, bufferGL);\r\n                gl.bufferData(gl.ARRAY_BUFFER, b.value, gl.STATIC_DRAW);\r\n                b.buffer = bufferGL;\r\n            }\r\n        });\r\n    }\r\n    glInit() {\r\n        gl = this.canvas.getContext('webgl2') || this.canvas.getContext('webgl') || this.canvas.getContext('experimental-webgl');\r\n        Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"setGl\"])(gl);\r\n        //this.env.setGl(gl);\r\n        //this.PP.setGl(gl);\r\n        this.parse.setGl(gl);\r\n        return true;\r\n    }\r\n    animate(sec) {\r\n        for (const v of this.parse.tracks) {\r\n            const val = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"interpolation\"])(sec, v.keys);\r\n            if (val[0] === -1 || val[1] === -1 || v.stoped) {\r\n                continue;\r\n            }\r\n            if (val[0] === v.keys.length - 1) {\r\n                v.stoped = true;\r\n            }\r\n            const startFrame = v.keys[val[0]];\r\n            const endFrame = v.keys[val[1]];\r\n            // eslint-disable-next-line\r\n            const t = val[2];\r\n            const component = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"getAnimationComponent\"])(v.type);\r\n            let vectorC;\r\n            if (component === 3) {\r\n                vectorC = _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"];\r\n            }\r\n            else if (component === 4) {\r\n                vectorC = _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector4\"];\r\n            }\r\n            else if (component === 2) {\r\n                vectorC = _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector2\"];\r\n            }\r\n            const vector = new vectorC(startFrame.value);\r\n            const vector2 = new vectorC(endFrame.value);\r\n            if (v.type === 'rotation') {\r\n                const out = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector4\"];\r\n                out.lerp(vector.elements, vector2.elements, t);\r\n                for (const mesh of v.meshes) {\r\n                    mesh.matrix.makeRotationFromQuaternion(out.elements);\r\n                }\r\n            }\r\n            else if (v.type === 'scale') {\r\n                const out = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"];\r\n                out.lerp(vector.elements, vector2.elements, t);\r\n                for (const mesh of v.meshes) {\r\n                    mesh.matrix.scale(out);\r\n                }\r\n            }\r\n            else if (v.type === 'weights') {\r\n                const out = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector2\"];\r\n                out.lerp(vector.elements, vector2.elements, t);\r\n                for (const mesh of v.meshes) {\r\n                    const geometry = {};\r\n                    for (const k in mesh.geometry.targets[0]) {\r\n                        let offset = 0;\r\n                        geometry[k] = new Float32Array(mesh.geometry.attributes[k].length);\r\n                        for (let i = 0; i < geometry[k].length; i++) {\r\n                            if (k === 'TANGENT' && (i + 1) % 4 === 0) {\r\n                                offset++;\r\n                                continue;\r\n                            }\r\n                            geometry[k][i] = mesh.geometry.attributes[k][i] + out.elements[0] * mesh.geometry.targets[0][k][i - offset] + out.elements[1] * mesh.geometry.targets[1][k][i - offset];\r\n                        }\r\n                    }\r\n                    gl.bindVertexArray(mesh.geometry.VAO);\r\n                    for (const k in geometry) {\r\n                        const VBO = gl.createBuffer();\r\n                        gl.bindBuffer(gl.ARRAY_BUFFER, VBO);\r\n                        gl.bufferData(gl.ARRAY_BUFFER, geometry[k], gl.STATIC_DRAW);\r\n                        const index = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"getAttributeIndex\"])(k);\r\n                        gl.enableVertexAttribArray(index[0]);\r\n                        gl.vertexAttribPointer(index[0], index[1], index[2], false, 0, 0);\r\n                    }\r\n                    gl.bindVertexArray(null);\r\n                }\r\n            }\r\n            else if (v.type === 'translation') {\r\n                const out = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"];\r\n                out.lerp(vector.elements, vector2.elements, t);\r\n                for (const mesh of v.meshes) {\r\n                    mesh.matrix.setTranslate(out);\r\n                }\r\n            }\r\n            else {\r\n                console.error('ERROR');\r\n            }\r\n            for (const mesh of v.meshes) {\r\n                Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"walk\"])(mesh, node => {\r\n                    const m = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Matrix4\"];\r\n                    m.multiply(node.parent.matrixWorld);\r\n                    m.multiply(node.matrix);\r\n                    node.setMatrixWorld(m.elements);\r\n                    if (node instanceof _objects__WEBPACK_IMPORTED_MODULE_0__[\"Bone\"]) {\r\n                        node.reflow = true;\r\n                    }\r\n                    if (node instanceof _objects__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"]) {\r\n                        node.reflow = true;\r\n                    }\r\n                    if (node instanceof _objects__WEBPACK_IMPORTED_MODULE_0__[\"Camera\"] && node === this._camera) {\r\n                        this.needUpdateView = true;\r\n                    }\r\n                });\r\n            }\r\n            this.reflow = true;\r\n        }\r\n    }\r\n    draw() {\r\n        gl.clearColor(...this.color);\r\n        this.render();\r\n    }\r\n    render(time = 0) {\r\n        const sec = time / 1000;\r\n        this.animate(sec);\r\n        if (this.reflow) {\r\n            //this.PP.bindBuffer();\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            //this.env.createEnvironment();\r\n            gl.enable(gl.DEPTH_TEST);\r\n            gl.enable(gl.CULL_FACE);\r\n            this.scene.opaqueChildren.forEach(mesh => this._draw(mesh));\r\n            if (this.scene.transparentChildren.length) {\r\n                gl.enable(gl.BLEND);\r\n                gl.depthMask(false);\r\n                gl.blendFuncSeparate(gl.SRC_COLOR, gl.DST_COLOR, gl.ONE, gl.ZERO);\r\n                // gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n                this.scene.transparentChildren.forEach(mesh => this._draw(mesh));\r\n                gl.disable(gl.BLEND);\r\n                gl.depthMask(true);\r\n                gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\r\n            }\r\n            Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"walk\"])(this.scene, node => {\r\n                if (node instanceof _objects__WEBPACK_IMPORTED_MODULE_0__[\"Bone\"]) {\r\n                    node.reflow = false;\r\n                }\r\n            });\r\n            this.needUpdateView = false;\r\n            this.needUpdateProjection = false;\r\n            //this.PP.postProcessing();\r\n        }\r\n        this.fps.tick(time);\r\n        this.reflow = false;\r\n        requestAnimationFrame(this.render.bind(this));\r\n    }\r\n    _draw(mesh) {\r\n        gl.useProgram(mesh.program);\r\n        gl.bindVertexArray(mesh.geometry.VAO);\r\n        gl.bindBufferBase(gl.UNIFORM_BUFFER, 0, mesh.geometry.UBO);\r\n        if (mesh.reflow) {\r\n            const normalMatrix = new _matrix__WEBPACK_IMPORTED_MODULE_1__[\"Matrix4\"](mesh.matrixWorld);\r\n            normalMatrix.invert().transpose();\r\n            const matrices = new Float32Array(32);\r\n            matrices.set(mesh.matrixWorld.elements);\r\n            matrices.set(normalMatrix.elements, 16);\r\n            gl.bufferSubData(gl.UNIFORM_BUFFER, 0, matrices);\r\n            mesh.reflow = false;\r\n        }\r\n        if (this.needUpdateView) {\r\n            gl.bufferSubData(gl.UNIFORM_BUFFER, 32 * Float32Array.BYTES_PER_ELEMENT, this._camera.matrixWorldInvert.elements);\r\n        }\r\n        if (this.needUpdateProjection) {\r\n            gl.bufferSubData(gl.UNIFORM_BUFFER, 48 * Float32Array.BYTES_PER_ELEMENT, this._camera.projection.elements);\r\n        }\r\n        if (mesh instanceof _objects__WEBPACK_IMPORTED_MODULE_0__[\"SkinnedMesh\"]) {\r\n            gl.bindBufferBase(gl.UNIFORM_BUFFER, 2, mesh.geometry.SKIN);\r\n            if (mesh.bones.some(bone => bone.reflow)) {\r\n                const jointMatrix = mesh.getJointMatrix();\r\n                const matrices = new Float32Array(jointMatrix.length * 16);\r\n                let i = 0;\r\n                for (const j of jointMatrix) {\r\n                    matrices.set(j.elements, 0 + 16 * i);\r\n                    i++;\r\n                }\r\n                gl.bufferSubData(gl.UNIFORM_BUFFER, 0, matrices);\r\n            }\r\n        }\r\n        if (mesh.material.UBO) {\r\n            gl.bindBufferBase(gl.UNIFORM_BUFFER, 1, mesh.material.UBO);\r\n            if (this.needUpdateView) {\r\n                gl.bufferSubData(gl.UNIFORM_BUFFER, 4 * Float32Array.BYTES_PER_ELEMENT, new Float32Array([this._camera.matrixWorld.elements[12], this._camera.matrixWorld.elements[13], this._camera.matrixWorld.elements[14]]));\r\n                gl.bufferSubData(gl.UNIFORM_BUFFER, 8 * Float32Array.BYTES_PER_ELEMENT, new Float32Array([this._camera.matrixWorld.elements[12], this._camera.matrixWorld.elements[13], this._camera.matrixWorld.elements[14]]));\r\n            }\r\n        }\r\n        if (mesh.material.pbrMetallicRoughness.baseColorTexture) {\r\n            gl.uniform1i(mesh.material.uniforms.baseColorTexture, mesh.material.pbrMetallicRoughness.baseColorTexture.count);\r\n        }\r\n        if (mesh.material.pbrMetallicRoughness.metallicRoughnessTexture) {\r\n            gl.uniform1i(mesh.material.uniforms.metallicRoughnessTexture, mesh.material.pbrMetallicRoughness.metallicRoughnessTexture.count);\r\n        }\r\n        if (mesh.material.normalTexture) {\r\n            gl.uniform1i(mesh.material.uniforms.normalTexture, mesh.material.normalTexture.count);\r\n        }\r\n        if (mesh.material.occlusionTexture) {\r\n            gl.uniform1i(mesh.material.uniforms.occlusionTexture, mesh.material.occlusionTexture.count);\r\n        }\r\n        if (mesh.material.emissiveTexture) {\r\n            gl.uniform1i(mesh.material.uniforms.emissiveTexture, mesh.material.emissiveTexture.count);\r\n        }\r\n        if (mesh.material.doubleSided) {\r\n            gl.disable(gl.CULL_FACE);\r\n        }\r\n        if (mesh.geometry.indicesBuffer) {\r\n            gl.drawElements(mesh.mode || gl.TRIANGLES, mesh.geometry.indicesBuffer.length, mesh.geometry.indicesBuffer.BYTES_PER_ELEMENT === 4 ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT, 0);\r\n        }\r\n        else {\r\n            gl.drawArrays(mesh.mode || gl.TRIANGLES, 0, mesh.geometry.attributes.POSITION.length / 3);\r\n        }\r\n        if (mesh.material.doubleSided) {\r\n            gl.enable(gl.CULL_FACE);\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/redcube.ts\n");

/***/ }),

/***/ "./src/shaders/fragment.glsl":
/*!***********************************!*\
  !*** ./src/shaders/fragment.glsl ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"#version 300 es\\r\\nprecision highp float;\\r\\n\\r\\nin vec2 outUV;\\r\\nin vec3 outPosition;\\r\\n#ifdef TANGENT\\r\\n    in mat3 outTBN;\\r\\n#else\\r\\n    in vec3 outNormal;\\r\\n#endif\\r\\n\\r\\nout vec4 color;\\r\\n\\r\\nuniform Material {\\r\\n    vec4 baseColorFactor;\\r\\n    vec3 lightPos;\\r\\n    vec3 viewPos;\\r\\n};\\r\\nuniform sampler2D baseColorTexture;\\r\\nuniform sampler2D metallicRoughnessTexture;\\r\\nuniform sampler2D normalTexture;\\r\\nuniform sampler2D emissiveTexture;\\r\\nuniform sampler2D occlusionTexture;\\r\\n\\r\\nconst float PI = 3.14159265359;\\r\\nconst float ambientStrength = 0.1;\\r\\nconst float specularStrength = 0.5;\\r\\nconst float specularPower = 32.0;\\r\\nconst vec3 lightColor = vec3(1.0, 1.0, 1.0);\\r\\nconst vec3 emissiveFactor = vec3(1.0, 1.0, 1.0);\\r\\n\\r\\nvec3 srgbToLinear(vec4 srgbIn) {\\r\\n    return pow(srgbIn.rgb, vec3(2.2));\\r\\n}\\r\\n\\r\\nfloat DistributionGGX(vec3 N, vec3 H, float roughness) {\\r\\n    float a = roughness*roughness;\\r\\n    float a2 = max(a*a, 0.0001);\\r\\n    float NdotH = max(dot(N, H), 0.0);\\r\\n    float NdotH2 = NdotH*NdotH;\\r\\n\\r\\n    float nom   = a2;\\r\\n    float denom = (NdotH2 * (a2 - 1.0) + 1.0);\\r\\n    denom = PI * denom * denom;\\r\\n\\r\\n    return nom / max(denom, 0.0001);\\r\\n}\\r\\n\\r\\nfloat GeometrySchlickGGX(float NdotV, float roughness) {\\r\\n    float r = (roughness + 1.0);\\r\\n    float k = (r*r) / 8.0;\\r\\n\\r\\n    float nom   = NdotV;\\r\\n    float denom = NdotV * (1.0 - k) + k;\\r\\n\\r\\n    return nom / denom;\\r\\n}\\r\\n\\r\\nfloat GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness) {\\r\\n    float NdotV = max(dot(N, V), 0.0);\\r\\n    float NdotL = max(dot(N, L), 0.0);\\r\\n    float ggx2 = GeometrySchlickGGX(NdotV, roughness);\\r\\n    float ggx1 = GeometrySchlickGGX(NdotL, roughness);\\r\\n\\r\\n    return ggx1 * ggx2;\\r\\n}\\r\\n\\r\\nvec3 fresnelSchlick(float cosTheta, vec3 F0) {\\r\\n    return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n    #ifdef BASECOLORTEXTURE\\r\\n        vec3 baseColor = srgbToLinear(texture(baseColorTexture, outUV));\\r\\n        float alpha = texture(baseColorTexture, outUV).a;\\r\\n    #else\\r\\n        vec3 baseColor = baseColorFactor.rgb;\\r\\n        float alpha = baseColorFactor.a;\\r\\n    #endif\\r\\n\\r\\n    #ifdef OCCLUSIONMAP\\r\\n        float ao = texture(occlusionTexture, outUV).r;\\r\\n    #endif\\r\\n\\r\\n    #ifdef METALROUGHNESSMAP\\r\\n        float roughness = texture(metallicRoughnessTexture, outUV).g;\\r\\n        float metallic = texture(metallicRoughnessTexture, outUV).b;\\r\\n    #endif\\r\\n\\r\\n    #ifdef TANGENT\\r\\n        #ifdef NORMALMAP\\r\\n            vec3 n = texture(normalTexture, outUV).rgb;\\r\\n            n = normalize(outTBN * (2.0 * n - 1.0));\\r\\n        #else\\r\\n            vec3 n = outTBN[2].xyz;\\r\\n        #endif\\r\\n    #else\\r\\n        vec3 n = outNormal;\\r\\n    #endif\\r\\n\\r\\n    vec3 viewDir = normalize(viewPos - outPosition);\\r\\n    vec3 lightDir = normalize(lightPos - outPosition);\\r\\n    vec3 H = normalize(viewDir + lightDir);\\r\\n    float distance = length(lightPos - outPosition);\\r\\n    float attenuation = 1.0 / (distance * distance);\\r\\n    vec3 radiance = lightColor * 2.0;\\r\\n\\r\\n    #ifdef USE_PBR\\r\\n        vec3 F0 = vec3(0.04); \\r\\n        F0 = mix(F0, baseColor, metallic);\\r\\n\\r\\n        vec3 light = vec3(0.0);\\r\\n\\r\\n        float NDF = DistributionGGX(n, H, roughness);        \\r\\n        float G = GeometrySmith(n, viewDir, lightDir, roughness);      \\r\\n        vec3 F = fresnelSchlick(max(dot(H, viewDir), 0.0), F0);       \\r\\n        \\r\\n        vec3 kS = F;\\r\\n        vec3 kD = vec3(1.0) - kS;\\r\\n        kD *= 1.0 - metallic;     \\r\\n        \\r\\n        vec3 nominator = NDF * G * F;\\r\\n        float denominator = 4.0 * max(dot(n, viewDir), 0.0) * max(dot(n, lightDir), 0.0);\\r\\n        vec3 specular = nominator / max(denominator, 0.001);  \\r\\n\\r\\n        float NdotL = max(dot(n, lightDir), 0.0);                \\r\\n        light += (kD * baseColor / PI + specular) * radiance * NdotL;\\r\\n\\r\\n        #ifdef OCCLUSIONMAP\\r\\n            vec3 ambient = vec3(0.03) * baseColor * ao;\\r\\n        #else\\r\\n            vec3 ambient = baseColor;\\r\\n        #endif\\r\\n        baseColor = ambient + light;\\r\\n\\r\\n        #ifdef EMISSIVEMAP\\r\\n            vec3 emissive = srgbToLinear(texture(emissiveTexture, outUV)) * emissiveFactor;\\r\\n            baseColor.rgb += emissive;\\r\\n        #endif\\r\\n\\r\\n        baseColor = baseColor / (baseColor + vec3(1.0));\\r\\n        baseColor = pow(baseColor, vec3(1.0 / 2.2));  \\r\\n   \\r\\n        color = vec4(baseColor, 1.0);\\r\\n    #else\\r\\n        vec3 ambient = ambientStrength * lightColor;\\r\\n\\r\\n        float diff = max(dot(n, lightDir), 0.0);\\r\\n        vec3 diffuse = diff * lightColor;\\r\\n\\r\\n        vec3 reflectDir = reflect(-lightDir, n);\\r\\n        float spec = pow(max(dot(viewDir, reflectDir), 0.0), specularPower);\\r\\n        vec3 specular = specularStrength * spec * lightColor;\\r\\n\\r\\n        color = vec4(baseColor.rgb * (ambient + diffuse + specular), alpha);\\r\\n    #endif\\r\\n}\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhZGVycy9mcmFnbWVudC5nbHNsLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVkY3ViZS8uL3NyYy9zaGFkZXJzL2ZyYWdtZW50Lmdsc2w/OThmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiI3ZlcnNpb24gMzAwIGVzXFxyXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcclxcblxcclxcbmluIHZlYzIgb3V0VVY7XFxyXFxuaW4gdmVjMyBvdXRQb3NpdGlvbjtcXHJcXG4jaWZkZWYgVEFOR0VOVFxcclxcbiAgICBpbiBtYXQzIG91dFRCTjtcXHJcXG4jZWxzZVxcclxcbiAgICBpbiB2ZWMzIG91dE5vcm1hbDtcXHJcXG4jZW5kaWZcXHJcXG5cXHJcXG5vdXQgdmVjNCBjb2xvcjtcXHJcXG5cXHJcXG51bmlmb3JtIE1hdGVyaWFsIHtcXHJcXG4gICAgdmVjNCBiYXNlQ29sb3JGYWN0b3I7XFxyXFxuICAgIHZlYzMgbGlnaHRQb3M7XFxyXFxuICAgIHZlYzMgdmlld1BvcztcXHJcXG59O1xcclxcbnVuaWZvcm0gc2FtcGxlcjJEIGJhc2VDb2xvclRleHR1cmU7XFxyXFxudW5pZm9ybSBzYW1wbGVyMkQgbWV0YWxsaWNSb3VnaG5lc3NUZXh0dXJlO1xcclxcbnVuaWZvcm0gc2FtcGxlcjJEIG5vcm1hbFRleHR1cmU7XFxyXFxudW5pZm9ybSBzYW1wbGVyMkQgZW1pc3NpdmVUZXh0dXJlO1xcclxcbnVuaWZvcm0gc2FtcGxlcjJEIG9jY2x1c2lvblRleHR1cmU7XFxyXFxuXFxyXFxuY29uc3QgZmxvYXQgUEkgPSAzLjE0MTU5MjY1MzU5O1xcclxcbmNvbnN0IGZsb2F0IGFtYmllbnRTdHJlbmd0aCA9IDAuMTtcXHJcXG5jb25zdCBmbG9hdCBzcGVjdWxhclN0cmVuZ3RoID0gMC41O1xcclxcbmNvbnN0IGZsb2F0IHNwZWN1bGFyUG93ZXIgPSAzMi4wO1xcclxcbmNvbnN0IHZlYzMgbGlnaHRDb2xvciA9IHZlYzMoMS4wLCAxLjAsIDEuMCk7XFxyXFxuY29uc3QgdmVjMyBlbWlzc2l2ZUZhY3RvciA9IHZlYzMoMS4wLCAxLjAsIDEuMCk7XFxyXFxuXFxyXFxudmVjMyBzcmdiVG9MaW5lYXIodmVjNCBzcmdiSW4pIHtcXHJcXG4gICAgcmV0dXJuIHBvdyhzcmdiSW4ucmdiLCB2ZWMzKDIuMikpO1xcclxcbn1cXHJcXG5cXHJcXG5mbG9hdCBEaXN0cmlidXRpb25HR1godmVjMyBOLCB2ZWMzIEgsIGZsb2F0IHJvdWdobmVzcykge1xcclxcbiAgICBmbG9hdCBhID0gcm91Z2huZXNzKnJvdWdobmVzcztcXHJcXG4gICAgZmxvYXQgYTIgPSBtYXgoYSphLCAwLjAwMDEpO1xcclxcbiAgICBmbG9hdCBOZG90SCA9IG1heChkb3QoTiwgSCksIDAuMCk7XFxyXFxuICAgIGZsb2F0IE5kb3RIMiA9IE5kb3RIKk5kb3RIO1xcclxcblxcclxcbiAgICBmbG9hdCBub20gICA9IGEyO1xcclxcbiAgICBmbG9hdCBkZW5vbSA9IChOZG90SDIgKiAoYTIgLSAxLjApICsgMS4wKTtcXHJcXG4gICAgZGVub20gPSBQSSAqIGRlbm9tICogZGVub207XFxyXFxuXFxyXFxuICAgIHJldHVybiBub20gLyBtYXgoZGVub20sIDAuMDAwMSk7XFxyXFxufVxcclxcblxcclxcbmZsb2F0IEdlb21ldHJ5U2NobGlja0dHWChmbG9hdCBOZG90ViwgZmxvYXQgcm91Z2huZXNzKSB7XFxyXFxuICAgIGZsb2F0IHIgPSAocm91Z2huZXNzICsgMS4wKTtcXHJcXG4gICAgZmxvYXQgayA9IChyKnIpIC8gOC4wO1xcclxcblxcclxcbiAgICBmbG9hdCBub20gICA9IE5kb3RWO1xcclxcbiAgICBmbG9hdCBkZW5vbSA9IE5kb3RWICogKDEuMCAtIGspICsgaztcXHJcXG5cXHJcXG4gICAgcmV0dXJuIG5vbSAvIGRlbm9tO1xcclxcbn1cXHJcXG5cXHJcXG5mbG9hdCBHZW9tZXRyeVNtaXRoKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIGZsb2F0IHJvdWdobmVzcykge1xcclxcbiAgICBmbG9hdCBOZG90ViA9IG1heChkb3QoTiwgViksIDAuMCk7XFxyXFxuICAgIGZsb2F0IE5kb3RMID0gbWF4KGRvdChOLCBMKSwgMC4wKTtcXHJcXG4gICAgZmxvYXQgZ2d4MiA9IEdlb21ldHJ5U2NobGlja0dHWChOZG90Viwgcm91Z2huZXNzKTtcXHJcXG4gICAgZmxvYXQgZ2d4MSA9IEdlb21ldHJ5U2NobGlja0dHWChOZG90TCwgcm91Z2huZXNzKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGdneDEgKiBnZ3gyO1xcclxcbn1cXHJcXG5cXHJcXG52ZWMzIGZyZXNuZWxTY2hsaWNrKGZsb2F0IGNvc1RoZXRhLCB2ZWMzIEYwKSB7XFxyXFxuICAgIHJldHVybiBGMCArICgxLjAgLSBGMCkgKiBwb3coMS4wIC0gY29zVGhldGEsIDUuMCk7XFxyXFxufVxcclxcblxcclxcbnZvaWQgbWFpbigpIHtcXHJcXG4gICAgI2lmZGVmIEJBU0VDT0xPUlRFWFRVUkVcXHJcXG4gICAgICAgIHZlYzMgYmFzZUNvbG9yID0gc3JnYlRvTGluZWFyKHRleHR1cmUoYmFzZUNvbG9yVGV4dHVyZSwgb3V0VVYpKTtcXHJcXG4gICAgICAgIGZsb2F0IGFscGhhID0gdGV4dHVyZShiYXNlQ29sb3JUZXh0dXJlLCBvdXRVVikuYTtcXHJcXG4gICAgI2Vsc2VcXHJcXG4gICAgICAgIHZlYzMgYmFzZUNvbG9yID0gYmFzZUNvbG9yRmFjdG9yLnJnYjtcXHJcXG4gICAgICAgIGZsb2F0IGFscGhhID0gYmFzZUNvbG9yRmFjdG9yLmE7XFxyXFxuICAgICNlbmRpZlxcclxcblxcclxcbiAgICAjaWZkZWYgT0NDTFVTSU9OTUFQXFxyXFxuICAgICAgICBmbG9hdCBhbyA9IHRleHR1cmUob2NjbHVzaW9uVGV4dHVyZSwgb3V0VVYpLnI7XFxyXFxuICAgICNlbmRpZlxcclxcblxcclxcbiAgICAjaWZkZWYgTUVUQUxST1VHSE5FU1NNQVBcXHJcXG4gICAgICAgIGZsb2F0IHJvdWdobmVzcyA9IHRleHR1cmUobWV0YWxsaWNSb3VnaG5lc3NUZXh0dXJlLCBvdXRVVikuZztcXHJcXG4gICAgICAgIGZsb2F0IG1ldGFsbGljID0gdGV4dHVyZShtZXRhbGxpY1JvdWdobmVzc1RleHR1cmUsIG91dFVWKS5iO1xcclxcbiAgICAjZW5kaWZcXHJcXG5cXHJcXG4gICAgI2lmZGVmIFRBTkdFTlRcXHJcXG4gICAgICAgICNpZmRlZiBOT1JNQUxNQVBcXHJcXG4gICAgICAgICAgICB2ZWMzIG4gPSB0ZXh0dXJlKG5vcm1hbFRleHR1cmUsIG91dFVWKS5yZ2I7XFxyXFxuICAgICAgICAgICAgbiA9IG5vcm1hbGl6ZShvdXRUQk4gKiAoMi4wICogbiAtIDEuMCkpO1xcclxcbiAgICAgICAgI2Vsc2VcXHJcXG4gICAgICAgICAgICB2ZWMzIG4gPSBvdXRUQk5bMl0ueHl6O1xcclxcbiAgICAgICAgI2VuZGlmXFxyXFxuICAgICNlbHNlXFxyXFxuICAgICAgICB2ZWMzIG4gPSBvdXROb3JtYWw7XFxyXFxuICAgICNlbmRpZlxcclxcblxcclxcbiAgICB2ZWMzIHZpZXdEaXIgPSBub3JtYWxpemUodmlld1BvcyAtIG91dFBvc2l0aW9uKTtcXHJcXG4gICAgdmVjMyBsaWdodERpciA9IG5vcm1hbGl6ZShsaWdodFBvcyAtIG91dFBvc2l0aW9uKTtcXHJcXG4gICAgdmVjMyBIID0gbm9ybWFsaXplKHZpZXdEaXIgKyBsaWdodERpcik7XFxyXFxuICAgIGZsb2F0IGRpc3RhbmNlID0gbGVuZ3RoKGxpZ2h0UG9zIC0gb3V0UG9zaXRpb24pO1xcclxcbiAgICBmbG9hdCBhdHRlbnVhdGlvbiA9IDEuMCAvIChkaXN0YW5jZSAqIGRpc3RhbmNlKTtcXHJcXG4gICAgdmVjMyByYWRpYW5jZSA9IGxpZ2h0Q29sb3IgKiAyLjA7XFxyXFxuXFxyXFxuICAgICNpZmRlZiBVU0VfUEJSXFxyXFxuICAgICAgICB2ZWMzIEYwID0gdmVjMygwLjA0KTsgXFxyXFxuICAgICAgICBGMCA9IG1peChGMCwgYmFzZUNvbG9yLCBtZXRhbGxpYyk7XFxyXFxuXFxyXFxuICAgICAgICB2ZWMzIGxpZ2h0ID0gdmVjMygwLjApO1xcclxcblxcclxcbiAgICAgICAgZmxvYXQgTkRGID0gRGlzdHJpYnV0aW9uR0dYKG4sIEgsIHJvdWdobmVzcyk7ICAgICAgICBcXHJcXG4gICAgICAgIGZsb2F0IEcgPSBHZW9tZXRyeVNtaXRoKG4sIHZpZXdEaXIsIGxpZ2h0RGlyLCByb3VnaG5lc3MpOyAgICAgIFxcclxcbiAgICAgICAgdmVjMyBGID0gZnJlc25lbFNjaGxpY2sobWF4KGRvdChILCB2aWV3RGlyKSwgMC4wKSwgRjApOyAgICAgICBcXHJcXG4gICAgICAgIFxcclxcbiAgICAgICAgdmVjMyBrUyA9IEY7XFxyXFxuICAgICAgICB2ZWMzIGtEID0gdmVjMygxLjApIC0ga1M7XFxyXFxuICAgICAgICBrRCAqPSAxLjAgLSBtZXRhbGxpYzsgICAgIFxcclxcbiAgICAgICAgXFxyXFxuICAgICAgICB2ZWMzIG5vbWluYXRvciA9IE5ERiAqIEcgKiBGO1xcclxcbiAgICAgICAgZmxvYXQgZGVub21pbmF0b3IgPSA0LjAgKiBtYXgoZG90KG4sIHZpZXdEaXIpLCAwLjApICogbWF4KGRvdChuLCBsaWdodERpciksIDAuMCk7XFxyXFxuICAgICAgICB2ZWMzIHNwZWN1bGFyID0gbm9taW5hdG9yIC8gbWF4KGRlbm9taW5hdG9yLCAwLjAwMSk7ICBcXHJcXG5cXHJcXG4gICAgICAgIGZsb2F0IE5kb3RMID0gbWF4KGRvdChuLCBsaWdodERpciksIDAuMCk7ICAgICAgICAgICAgICAgIFxcclxcbiAgICAgICAgbGlnaHQgKz0gKGtEICogYmFzZUNvbG9yIC8gUEkgKyBzcGVjdWxhcikgKiByYWRpYW5jZSAqIE5kb3RMO1xcclxcblxcclxcbiAgICAgICAgI2lmZGVmIE9DQ0xVU0lPTk1BUFxcclxcbiAgICAgICAgICAgIHZlYzMgYW1iaWVudCA9IHZlYzMoMC4wMykgKiBiYXNlQ29sb3IgKiBhbztcXHJcXG4gICAgICAgICNlbHNlXFxyXFxuICAgICAgICAgICAgdmVjMyBhbWJpZW50ID0gYmFzZUNvbG9yO1xcclxcbiAgICAgICAgI2VuZGlmXFxyXFxuICAgICAgICBiYXNlQ29sb3IgPSBhbWJpZW50ICsgbGlnaHQ7XFxyXFxuXFxyXFxuICAgICAgICAjaWZkZWYgRU1JU1NJVkVNQVBcXHJcXG4gICAgICAgICAgICB2ZWMzIGVtaXNzaXZlID0gc3JnYlRvTGluZWFyKHRleHR1cmUoZW1pc3NpdmVUZXh0dXJlLCBvdXRVVikpICogZW1pc3NpdmVGYWN0b3I7XFxyXFxuICAgICAgICAgICAgYmFzZUNvbG9yLnJnYiArPSBlbWlzc2l2ZTtcXHJcXG4gICAgICAgICNlbmRpZlxcclxcblxcclxcbiAgICAgICAgYmFzZUNvbG9yID0gYmFzZUNvbG9yIC8gKGJhc2VDb2xvciArIHZlYzMoMS4wKSk7XFxyXFxuICAgICAgICBiYXNlQ29sb3IgPSBwb3coYmFzZUNvbG9yLCB2ZWMzKDEuMCAvIDIuMikpOyAgXFxyXFxuICAgXFxyXFxuICAgICAgICBjb2xvciA9IHZlYzQoYmFzZUNvbG9yLCAxLjApO1xcclxcbiAgICAjZWxzZVxcclxcbiAgICAgICAgdmVjMyBhbWJpZW50ID0gYW1iaWVudFN0cmVuZ3RoICogbGlnaHRDb2xvcjtcXHJcXG5cXHJcXG4gICAgICAgIGZsb2F0IGRpZmYgPSBtYXgoZG90KG4sIGxpZ2h0RGlyKSwgMC4wKTtcXHJcXG4gICAgICAgIHZlYzMgZGlmZnVzZSA9IGRpZmYgKiBsaWdodENvbG9yO1xcclxcblxcclxcbiAgICAgICAgdmVjMyByZWZsZWN0RGlyID0gcmVmbGVjdCgtbGlnaHREaXIsIG4pO1xcclxcbiAgICAgICAgZmxvYXQgc3BlYyA9IHBvdyhtYXgoZG90KHZpZXdEaXIsIHJlZmxlY3REaXIpLCAwLjApLCBzcGVjdWxhclBvd2VyKTtcXHJcXG4gICAgICAgIHZlYzMgc3BlY3VsYXIgPSBzcGVjdWxhclN0cmVuZ3RoICogc3BlYyAqIGxpZ2h0Q29sb3I7XFxyXFxuXFxyXFxuICAgICAgICBjb2xvciA9IHZlYzQoYmFzZUNvbG9yLnJnYiAqIChhbWJpZW50ICsgZGlmZnVzZSArIHNwZWN1bGFyKSwgYWxwaGEpO1xcclxcbiAgICAjZW5kaWZcXHJcXG59XFxyXFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/shaders/fragment.glsl\n");

/***/ }),

/***/ "./src/shaders/vertex.glsl":
/*!*********************************!*\
  !*** ./src/shaders/vertex.glsl ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"#version 300 es\\r\\nprecision highp float;\\r\\n\\r\\nlayout (location = 0) in vec3 inPosition;\\r\\nlayout (location = 1) in vec3 inNormal;\\r\\nlayout (location = 2) in vec2 inUV;\\r\\nlayout (location = 3) in vec4 inJoint;\\r\\nlayout (location = 4) in vec4 inWeight;\\r\\nlayout (location = 5) in vec4 inTangent;\\r\\n\\r\\nout vec2 outUV;\\r\\nout vec3 outPosition;\\r\\n#ifdef TANGENT\\r\\n    out mat3 outTBN;\\r\\n#else\\r\\n    out vec3 outNormal;\\r\\n#endif\\r\\n\\r\\nuniform Matrices {\\r\\n    mat4 model;\\r\\n    mat4 normalMatrix;\\r\\n    mat4 view;\\r\\n    mat4 projection;\\r\\n};\\r\\n\\r\\n#ifdef JOINTNUMBER\\r\\nuniform Skin {\\r\\n    mat4 joint[JOINTNUMBER];\\r\\n};\\r\\n#endif\\r\\n\\r\\nvoid main() {\\r\\n    #ifdef JOINTNUMBER\\r\\n        mat4 skin = inWeight.x * joint[int(inJoint.x)];\\r\\n        skin += inWeight.y * joint[int(inJoint.y)];\\r\\n        skin += inWeight.z * joint[int(inJoint.z)];\\r\\n        skin += inWeight.w * joint[int(inJoint.w)];\\r\\n    #else\\r\\n        mat4 skin = mat4(1.0);\\r\\n    #endif\\r\\n\\r\\n    outUV = inUV;\\r\\n    #ifdef TANGENT\\r\\n        vec3 normalW = normalize(vec3(model * vec4(inNormal.xyz, 0.0)));\\r\\n        vec3 tangentW = normalize(vec3(model * vec4(inTangent.xyz, 0.0)));\\r\\n        vec3 bitangentW = cross(normalW, tangentW) * inTangent.w;\\r\\n        outTBN = mat3(tangentW, bitangentW, normalW);\\r\\n    #else\\r\\n        outNormal = normalize(mat3(normalMatrix) * mat3(skin) * inNormal);\\r\\n    #endif\\r\\n    outPosition = vec3(model * skin * vec4(inPosition, 1.0));\\r\\n    gl_Position = projection * view * model * skin * vec4(inPosition, 1.0);\\r\\n}\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhZGVycy92ZXJ0ZXguZ2xzbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlZGN1YmUvLi9zcmMvc2hhZGVycy92ZXJ0ZXguZ2xzbD8wY2UwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCIjdmVyc2lvbiAzMDAgZXNcXHJcXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxyXFxuXFxyXFxubGF5b3V0IChsb2NhdGlvbiA9IDApIGluIHZlYzMgaW5Qb3NpdGlvbjtcXHJcXG5sYXlvdXQgKGxvY2F0aW9uID0gMSkgaW4gdmVjMyBpbk5vcm1hbDtcXHJcXG5sYXlvdXQgKGxvY2F0aW9uID0gMikgaW4gdmVjMiBpblVWO1xcclxcbmxheW91dCAobG9jYXRpb24gPSAzKSBpbiB2ZWM0IGluSm9pbnQ7XFxyXFxubGF5b3V0IChsb2NhdGlvbiA9IDQpIGluIHZlYzQgaW5XZWlnaHQ7XFxyXFxubGF5b3V0IChsb2NhdGlvbiA9IDUpIGluIHZlYzQgaW5UYW5nZW50O1xcclxcblxcclxcbm91dCB2ZWMyIG91dFVWO1xcclxcbm91dCB2ZWMzIG91dFBvc2l0aW9uO1xcclxcbiNpZmRlZiBUQU5HRU5UXFxyXFxuICAgIG91dCBtYXQzIG91dFRCTjtcXHJcXG4jZWxzZVxcclxcbiAgICBvdXQgdmVjMyBvdXROb3JtYWw7XFxyXFxuI2VuZGlmXFxyXFxuXFxyXFxudW5pZm9ybSBNYXRyaWNlcyB7XFxyXFxuICAgIG1hdDQgbW9kZWw7XFxyXFxuICAgIG1hdDQgbm9ybWFsTWF0cml4O1xcclxcbiAgICBtYXQ0IHZpZXc7XFxyXFxuICAgIG1hdDQgcHJvamVjdGlvbjtcXHJcXG59O1xcclxcblxcclxcbiNpZmRlZiBKT0lOVE5VTUJFUlxcclxcbnVuaWZvcm0gU2tpbiB7XFxyXFxuICAgIG1hdDQgam9pbnRbSk9JTlROVU1CRVJdO1xcclxcbn07XFxyXFxuI2VuZGlmXFxyXFxuXFxyXFxudm9pZCBtYWluKCkge1xcclxcbiAgICAjaWZkZWYgSk9JTlROVU1CRVJcXHJcXG4gICAgICAgIG1hdDQgc2tpbiA9IGluV2VpZ2h0LnggKiBqb2ludFtpbnQoaW5Kb2ludC54KV07XFxyXFxuICAgICAgICBza2luICs9IGluV2VpZ2h0LnkgKiBqb2ludFtpbnQoaW5Kb2ludC55KV07XFxyXFxuICAgICAgICBza2luICs9IGluV2VpZ2h0LnogKiBqb2ludFtpbnQoaW5Kb2ludC56KV07XFxyXFxuICAgICAgICBza2luICs9IGluV2VpZ2h0LncgKiBqb2ludFtpbnQoaW5Kb2ludC53KV07XFxyXFxuICAgICNlbHNlXFxyXFxuICAgICAgICBtYXQ0IHNraW4gPSBtYXQ0KDEuMCk7XFxyXFxuICAgICNlbmRpZlxcclxcblxcclxcbiAgICBvdXRVViA9IGluVVY7XFxyXFxuICAgICNpZmRlZiBUQU5HRU5UXFxyXFxuICAgICAgICB2ZWMzIG5vcm1hbFcgPSBub3JtYWxpemUodmVjMyhtb2RlbCAqIHZlYzQoaW5Ob3JtYWwueHl6LCAwLjApKSk7XFxyXFxuICAgICAgICB2ZWMzIHRhbmdlbnRXID0gbm9ybWFsaXplKHZlYzMobW9kZWwgKiB2ZWM0KGluVGFuZ2VudC54eXosIDAuMCkpKTtcXHJcXG4gICAgICAgIHZlYzMgYml0YW5nZW50VyA9IGNyb3NzKG5vcm1hbFcsIHRhbmdlbnRXKSAqIGluVGFuZ2VudC53O1xcclxcbiAgICAgICAgb3V0VEJOID0gbWF0Myh0YW5nZW50VywgYml0YW5nZW50Vywgbm9ybWFsVyk7XFxyXFxuICAgICNlbHNlXFxyXFxuICAgICAgICBvdXROb3JtYWwgPSBub3JtYWxpemUobWF0Myhub3JtYWxNYXRyaXgpICogbWF0Myhza2luKSAqIGluTm9ybWFsKTtcXHJcXG4gICAgI2VuZGlmXFxyXFxuICAgIG91dFBvc2l0aW9uID0gdmVjMyhtb2RlbCAqIHNraW4gKiB2ZWM0KGluUG9zaXRpb24sIDEuMCkpO1xcclxcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3ICogbW9kZWwgKiBza2luICogdmVjNChpblBvc2l0aW9uLCAxLjApO1xcclxcbn1cXHJcXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/shaders/vertex.glsl\n");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! exports provided: setGl, isMatrix, random, getMatrixType, getDataType, getComponentType, getMethod, getAnimationComponent, range, interpolation, buildArray, compileShader, walk, sceneToArcBall, canvasToWorld, calculateProjection, calculateOffset, getAttributeIndex, calculateBinormals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setGl\", function() { return setGl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMatrix\", function() { return isMatrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random\", function() { return random; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMatrixType\", function() { return getMatrixType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDataType\", function() { return getDataType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getComponentType\", function() { return getComponentType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMethod\", function() { return getMethod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAnimationComponent\", function() { return getAnimationComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolation\", function() { return interpolation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildArray\", function() { return buildArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compileShader\", function() { return compileShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"walk\", function() { return walk; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sceneToArcBall\", function() { return sceneToArcBall; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canvasToWorld\", function() { return canvasToWorld; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateProjection\", function() { return calculateProjection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateOffset\", function() { return calculateOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAttributeIndex\", function() { return getAttributeIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateBinormals\", function() { return calculateBinormals; });\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matrix */ \"./src/matrix.ts\");\n\r\nconst glEnum = {};\r\nlet gl;\r\nfunction setGl(_gl) {\r\n    gl = _gl;\r\n    for (const k in gl) {\r\n        const v = gl[k];\r\n        if (typeof v === 'number') {\r\n            glEnum[v] = k;\r\n        }\r\n    }\r\n}\r\nfunction isMatrix(type) {\r\n    return glEnum[type] === 'FLOAT_MAT4' || glEnum[type] === 'FLOAT_MAT3' || glEnum[type] === 'FLOAT_MAT2';\r\n}\r\nfunction random(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nfunction getMatrixType(type) {\r\n    if (glEnum[type] === 'FLOAT_MAT4') {\r\n        return _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"];\r\n    }\r\n    if (glEnum[type] === 'FLOAT_MAT3') {\r\n        return _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix3\"];\r\n    }\r\n    if (glEnum[type] === 'FLOAT_MAT2') {\r\n        return _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix2\"];\r\n    }\r\n}\r\nfunction getDataType(type) {\r\n    let count;\r\n    switch (type) {\r\n        case 'MAT2':\r\n            count = 4;\r\n            break;\r\n        case 'MAT3':\r\n            count = 9;\r\n            break;\r\n        case 'MAT4':\r\n            count = 16;\r\n            break;\r\n        case 'VEC4':\r\n            count = 4;\r\n            break;\r\n        case 'VEC3':\r\n            count = 3;\r\n            break;\r\n        case 'VEC2':\r\n            count = 2;\r\n            break;\r\n        case 'SCALAR':\r\n            count = 1;\r\n            break;\r\n    }\r\n    return count;\r\n}\r\nfunction getComponentType(type) {\r\n    let count;\r\n    switch (glEnum[type]) {\r\n        case 'FLOAT_VEC4':\r\n            count = 4;\r\n            break;\r\n        case 'FLOAT_VEC3':\r\n            count = 3;\r\n            break;\r\n        case 'FLOAT_VEC2':\r\n            count = 2;\r\n            break;\r\n    }\r\n    return count;\r\n}\r\nfunction getMethod(type) {\r\n    let method;\r\n    switch (glEnum[type]) {\r\n        case 'FLOAT_VEC2':\r\n            method = 'uniform2f';\r\n            break;\r\n        case 'FLOAT_VEC4':\r\n            method = 'uniform4f';\r\n            break;\r\n        case 'FLOAT':\r\n            method = 'uniform1f';\r\n            break;\r\n        case 'FLOAT_VEC3':\r\n            method = 'uniform3f';\r\n            break;\r\n        case 'FLOAT_MAT4':\r\n            method = 'uniformMatrix4fv';\r\n            break;\r\n        case 'FLOAT_MAT3':\r\n            method = 'uniformMatrix3fv';\r\n            break;\r\n        case 'FLOAT_MAT2':\r\n            method = 'uniformMatrix2fv';\r\n            break;\r\n        case 'SAMPLER_2D':\r\n            method = 'uniform1i';\r\n            break;\r\n    }\r\n    return method;\r\n}\r\nfunction getAnimationComponent(type) {\r\n    if (type === 'rotation') {\r\n        return 4;\r\n    }\r\n    else if (type === 'weights') {\r\n        return 2;\r\n    }\r\n    else {\r\n        return 3;\r\n    }\r\n}\r\nfunction range(min, max, value) {\r\n    return (value - min) / (max - min);\r\n}\r\nfunction interpolation(time, frames) {\r\n    if (frames.length === 0) {\r\n        return [-1, -1, 0];\r\n    }\r\n    let prev = -1;\r\n    for (let i = frames.length - 1; i >= 0; i--) {\r\n        if (time >= frames[i].time) {\r\n            prev = i;\r\n            break;\r\n        }\r\n    }\r\n    if (prev === -1 || prev === frames.length - 1) {\r\n        if (prev < 0) {\r\n            prev = 0;\r\n        }\r\n        return [prev, prev, 0];\r\n    }\r\n    else {\r\n        const startFrame = frames[prev];\r\n        const endFrame = frames[prev + 1];\r\n        time = Math.max(startFrame.time, Math.min(time, endFrame.time));\r\n        const t = range(startFrame.time, endFrame.time, time);\r\n        return [prev, prev + 1, t];\r\n    }\r\n}\r\nfunction getCount(type) {\r\n    let arr;\r\n    switch (glEnum[type]) {\r\n        case 'BYTE':\r\n        case 'UNSIGNED_BYTE':\r\n            arr = 1;\r\n            break;\r\n        case 'SHORT':\r\n        case 'UNSIGNED_SHORT':\r\n            arr = 2;\r\n            break;\r\n        case 'UNSIGNED_INT':\r\n        case 'FLOAT':\r\n            arr = 4;\r\n            break;\r\n    }\r\n    return arr;\r\n}\r\nfunction buildArray(arrayBuffer, type, offset, length, stride, count) {\r\n    const l = length;\r\n    const c = length / count;\r\n    if (stride && stride !== getCount(type) * c) {\r\n        length = stride * count / getCount(type) - offset / getCount(type);\r\n    }\r\n    let arr;\r\n    switch (glEnum[type]) {\r\n        case 'BYTE':\r\n            arr = new Int8Array(arrayBuffer, offset, length);\r\n            break;\r\n        case 'UNSIGNED_BYTE':\r\n            arr = new Uint8Array(arrayBuffer, offset, length);\r\n            break;\r\n        case 'SHORT':\r\n            arr = new Int16Array(arrayBuffer, offset, length);\r\n            break;\r\n        case 'UNSIGNED_SHORT':\r\n            arr = new Uint16Array(arrayBuffer, offset, length);\r\n            break;\r\n        case 'UNSIGNED_INT':\r\n            arr = new Uint32Array(arrayBuffer, offset, length);\r\n            break;\r\n        case 'FLOAT':\r\n            arr = new Float32Array(arrayBuffer, offset, length);\r\n            break;\r\n    }\r\n    if (stride && stride !== getCount(type) * c) {\r\n        const stridedArr = new Float32Array(l);\r\n        let j = 0;\r\n        for (let i = 0; i < stridedArr.length; i = i + c) {\r\n            stridedArr[i] = arr[j];\r\n            stridedArr[i + 1] = arr[j + 1];\r\n            stridedArr[i + 2] = arr[j + 2];\r\n            j = j + c * (stride / getCount(type) / c);\r\n        }\r\n        return stridedArr;\r\n    }\r\n    return arr;\r\n}\r\nfunction compileShader(type, shaderSource, program) {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    gl.attachShader(program, shader);\r\n    const log = gl.getShaderInfoLog(shader);\r\n    if (log) {\r\n        console.error(log);\r\n    }\r\n}\r\nfunction walk(node, callback) {\r\n    function _walk(node) {\r\n        callback(node);\r\n        if (node.children) {\r\n            node.children.forEach(_walk);\r\n        }\r\n    }\r\n    _walk(node);\r\n}\r\nfunction sceneToArcBall(pos) {\r\n    let len = pos[0] * pos[0] + pos[1] * pos[1];\r\n    const sz = 0.04 * 0.04 - len;\r\n    if (sz > 0) {\r\n        return [pos[0], pos[1], Math.sqrt(sz)];\r\n    }\r\n    else {\r\n        len = Math.sqrt(len);\r\n        return [0.04 * pos[0] / len, 0.04 * pos[1] / len, 0];\r\n    }\r\n}\r\nfunction canvasToWorld(vec2, projection, width, height) {\r\n    const [x, y] = vec2;\r\n    const newM = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]();\r\n    newM.setTranslate(new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]([0, 0, 0.05]));\r\n    const m = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"](projection);\r\n    m.multiply(newM);\r\n    const mp = m.multiplyVector4(new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector4\"]([0, 0, 0, 1]));\r\n    mp.elements[0] = (2 * x / width - 1) * mp.elements[3];\r\n    mp.elements[1] = (-2 * y / height + 1) * mp.elements[3];\r\n    const v = m.invert().multiplyVector4(mp);\r\n    return [v.elements[0], v.elements[1]];\r\n}\r\nfunction calculateProjection(cam, aspect, zoom) {\r\n    let proj;\r\n    if (cam.type === 'perspective' && cam.perspective) {\r\n        const { yfov } = cam.perspective;\r\n        const xfov = yfov * aspect;\r\n        proj = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]().setPerspective(xfov * zoom * (180 / Math.PI), aspect, cam.perspective.znear || 1, cam.perspective.zfar || 2e6);\r\n    }\r\n    else if (cam.type === 'orthographic' && cam.orthographic) {\r\n        proj = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]().setOrtho(cam.orthographic.xmag, cam.orthographic.ymag, cam.orthographic.znear, cam.orthographic.zfar);\r\n    }\r\n    return proj;\r\n}\r\nfunction calculateOffset(a = 0, b = 0) {\r\n    return a + b;\r\n}\r\nfunction getAttributeIndex(name) {\r\n    let index;\r\n    switch (name) {\r\n        case 'POSITION':\r\n            index = [0, 3, gl.FLOAT];\r\n            break;\r\n        case 'NORMAL':\r\n            index = [1, 3, gl.FLOAT];\r\n            break;\r\n        case 'TEXCOORD_0':\r\n            index = [2, 2, gl.FLOAT];\r\n            break;\r\n        case 'JOINTS_0':\r\n            index = [3, 4, gl.UNSIGNED_SHORT];\r\n            break;\r\n        case 'WEIGHTS_0':\r\n            index = [4, 4, gl.FLOAT];\r\n            break;\r\n        case 'TANGENT':\r\n            index = [5, 4, gl.FLOAT];\r\n            break;\r\n    }\r\n    return index;\r\n}\r\nfunction calculateBinormals(index, vertex, normal, uv) {\r\n    const tangent = new Float32Array(normal.length / 3 * 4);\r\n    for (let i = 0; i < index.length; i += 3) {\r\n        const faceIndexes = [index[i], index[i + 1], index[i + 2]];\r\n        const faceVertices = faceIndexes.map(ix => vectorFromArray(vertex, ix));\r\n        const faceUVs = faceIndexes.map(ix => vectorFromArray(uv, ix, 2));\r\n        const dv1 = faceVertices[1].subtract(faceVertices[0]);\r\n        const dv2 = faceVertices[2].subtract(faceVertices[0]);\r\n        const duv1 = faceUVs[1].subtract(faceUVs[0]);\r\n        const duv2 = faceUVs[2].subtract(faceUVs[0]);\r\n        let r = (duv1.elements[0] * duv2.elements[1] - duv1.elements[1] * duv2.elements[0]);\r\n        r = (r !== 0) ? 1.0 / r : 1.0;\r\n        const udir = new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]([\r\n            (duv2.elements[1] * dv1.elements[0] - duv1.elements[1] * dv2.elements[0]) * r,\r\n            (duv2.elements[1] * dv1.elements[1] - duv1.elements[1] * dv2.elements[1]) * r,\r\n            (duv2.elements[1] * dv1.elements[2] - duv1.elements[1] * dv2.elements[2]) * r\r\n        ]);\r\n        udir.normalize();\r\n        faceIndexes.forEach(ix => {\r\n            accumulateVectorInArray(tangent, ix, udir);\r\n        });\r\n    }\r\n    return tangent;\r\n    function vectorFromArray(array, index, elements = 3) {\r\n        index = index * elements;\r\n        if (elements === 3) {\r\n            return new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]([array[index], array[index + 1], array[index + 2]]);\r\n        }\r\n        if (elements === 2) {\r\n            return new _matrix__WEBPACK_IMPORTED_MODULE_0__[\"Vector2\"]([array[index], array[index + 1]]);\r\n        }\r\n    }\r\n    function accumulateVectorInArray(array, index, vector, elements = 4, accumulator = (acc, x) => acc + x) {\r\n        index = index * elements;\r\n        for (let i = 0; i < elements; ++i) {\r\n            if (i === 3) {\r\n                array[index + i] = -1;\r\n            }\r\n            else {\r\n                array[index + i] = accumulator(array[index + i], vector.elements[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils.ts\n");

/***/ })

/******/ });
});